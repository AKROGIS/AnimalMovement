#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//
// SqlMetal /server:INPAKRO39088\SQL2008R2 /database:Animal_Movement /pluralize /namespace:Model /code:Model.cs
//
//------------------------------------------------------------------------------

namespace Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class Animal_Movement : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAnimal(Animal instance);
    partial void UpdateAnimal(Animal instance);
    partial void DeleteAnimal(Animal instance);
    partial void InsertCollarDataDebevekFormat(CollarDataDebevekFormat instance);
    partial void UpdateCollarDataDebevekFormat(CollarDataDebevekFormat instance);
    partial void DeleteCollarDataDebevekFormat(CollarDataDebevekFormat instance);
    partial void InsertCollarDataTelonicsStoreOnBoard(CollarDataTelonicsStoreOnBoard instance);
    partial void UpdateCollarDataTelonicsStoreOnBoard(CollarDataTelonicsStoreOnBoard instance);
    partial void DeleteCollarDataTelonicsStoreOnBoard(CollarDataTelonicsStoreOnBoard instance);
    partial void InsertCollarDeployment(CollarDeployment instance);
    partial void UpdateCollarDeployment(CollarDeployment instance);
    partial void DeleteCollarDeployment(CollarDeployment instance);
    partial void InsertCollarFile(CollarFile instance);
    partial void UpdateCollarFile(CollarFile instance);
    partial void DeleteCollarFile(CollarFile instance);
    partial void InsertCollarFix(CollarFix instance);
    partial void UpdateCollarFix(CollarFix instance);
    partial void DeleteCollarFix(CollarFix instance);
    partial void InsertCollar(Collar instance);
    partial void UpdateCollar(Collar instance);
    partial void DeleteCollar(Collar instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertLookupCollarFileFormat(LookupCollarFileFormat instance);
    partial void UpdateLookupCollarFileFormat(LookupCollarFileFormat instance);
    partial void DeleteLookupCollarFileFormat(LookupCollarFileFormat instance);
    partial void InsertLookupCollarFileStatus(LookupCollarFileStatus instance);
    partial void UpdateLookupCollarFileStatus(LookupCollarFileStatus instance);
    partial void DeleteLookupCollarFileStatus(LookupCollarFileStatus instance);
    partial void InsertLookupCollarManufacturer(LookupCollarManufacturer instance);
    partial void UpdateLookupCollarManufacturer(LookupCollarManufacturer instance);
    partial void DeleteLookupCollarManufacturer(LookupCollarManufacturer instance);
    partial void InsertLookupCollarModel(LookupCollarModel instance);
    partial void UpdateLookupCollarModel(LookupCollarModel instance);
    partial void DeleteLookupCollarModel(LookupCollarModel instance);
    partial void InsertLookupGender(LookupGender instance);
    partial void UpdateLookupGender(LookupGender instance);
    partial void DeleteLookupGender(LookupGender instance);
    partial void InsertLookupSpecy(LookupSpecy instance);
    partial void UpdateLookupSpecy(LookupSpecy instance);
    partial void DeleteLookupSpecy(LookupSpecy instance);
    partial void InsertMovement(Movement instance);
    partial void UpdateMovement(Movement instance);
    partial void DeleteMovement(Movement instance);
    partial void InsertProjectEditor(ProjectEditor instance);
    partial void UpdateProjectEditor(ProjectEditor instance);
    partial void DeleteProjectEditor(ProjectEditor instance);
    partial void InsertProjectInvestigator(ProjectInvestigator instance);
    partial void UpdateProjectInvestigator(ProjectInvestigator instance);
    partial void DeleteProjectInvestigator(ProjectInvestigator instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    #endregion
		
		public Animal_Movement(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Animal_Movement(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Animal_Movement(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Animal_Movement(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Animal> Animals
		{
			get
			{
				return this.GetTable<Animal>();
			}
		}
		
		public System.Data.Linq.Table<CollarDataDebevekFormat> CollarDataDebevekFormats
		{
			get
			{
				return this.GetTable<CollarDataDebevekFormat>();
			}
		}
		
		public System.Data.Linq.Table<CollarDataTelonicsStoreOnBoard> CollarDataTelonicsStoreOnBoards
		{
			get
			{
				return this.GetTable<CollarDataTelonicsStoreOnBoard>();
			}
		}
		
		public System.Data.Linq.Table<CollarDeployment> CollarDeployments
		{
			get
			{
				return this.GetTable<CollarDeployment>();
			}
		}
		
		public System.Data.Linq.Table<CollarFile> CollarFiles
		{
			get
			{
				return this.GetTable<CollarFile>();
			}
		}
		
		public System.Data.Linq.Table<CollarFix> CollarFixes
		{
			get
			{
				return this.GetTable<CollarFix>();
			}
		}
		
		public System.Data.Linq.Table<Collar> Collars
		{
			get
			{
				return this.GetTable<Collar>();
			}
		}
		
		public System.Data.Linq.Table<Location> Locations
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<LookupCollarFileFormat> LookupCollarFileFormats
		{
			get
			{
				return this.GetTable<LookupCollarFileFormat>();
			}
		}
		
		public System.Data.Linq.Table<LookupCollarFileStatus> LookupCollarFileStatus
		{
			get
			{
				return this.GetTable<LookupCollarFileStatus>();
			}
		}
		
		public System.Data.Linq.Table<LookupCollarManufacturer> LookupCollarManufacturers
		{
			get
			{
				return this.GetTable<LookupCollarManufacturer>();
			}
		}
		
		public System.Data.Linq.Table<LookupCollarModel> LookupCollarModels
		{
			get
			{
				return this.GetTable<LookupCollarModel>();
			}
		}
		
		public System.Data.Linq.Table<LookupGender> LookupGenders
		{
			get
			{
				return this.GetTable<LookupGender>();
			}
		}
		
		public System.Data.Linq.Table<LookupSpecy> LookupSpecies
		{
			get
			{
				return this.GetTable<LookupSpecy>();
			}
		}
		
		public System.Data.Linq.Table<Movement> Movements
		{
			get
			{
				return this.GetTable<Movement>();
			}
		}
		
		public System.Data.Linq.Table<ProjectEditor> ProjectEditors
		{
			get
			{
				return this.GetTable<ProjectEditor>();
			}
		}
		
		public System.Data.Linq.Table<ProjectInvestigator> ProjectInvestigators
		{
			get
			{
				return this.GetTable<ProjectInvestigator>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Animals")]
	public partial class Animal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectId;
		
		private string _AnimalId;
		
		private string _Species;
		
		private string _Gender;
		
		private string _GroupName;
		
		private string _Description;
		
		private EntityRef<LookupGender> _LookupGender;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<LookupSpecy> _LookupSpecy;
		
		private EntitySet<CollarDeployment> _CollarDeployments;
		
		private EntitySet<Location> _Locations;
		
		private EntitySet<Movement> _Movements;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnAnimalIdChanging(string value);
    partial void OnAnimalIdChanged();
    partial void OnSpeciesChanging(string value);
    partial void OnSpeciesChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Animal()
		{
			this._LookupGender = default(EntityRef<LookupGender>);
			this._Project = default(EntityRef<Project>);
			this._LookupSpecy = default(EntityRef<LookupSpecy>);
			this._CollarDeployments = new EntitySet<CollarDeployment>(new Action<CollarDeployment>(this.attach_CollarDeployments), new Action<CollarDeployment>(this.detach_CollarDeployments));
			this._Locations = new EntitySet<Location>(new Action<Location>(this.attach_Locations), new Action<Location>(this.detach_Locations));
			this._Movements = new EntitySet<Movement>(new Action<Movement>(this.attach_Movements), new Action<Movement>(this.detach_Movements));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AnimalId
		{
			get
			{
				return this._AnimalId;
			}
			set
			{
				if ((this._AnimalId != value))
				{
					this.OnAnimalIdChanging(value);
					this.SendPropertyChanging();
					this._AnimalId = value;
					this.SendPropertyChanged("AnimalId");
					this.OnAnimalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Species", DbType="VarChar(32)")]
		public string Species
		{
			get
			{
				return this._Species;
			}
			set
			{
				if ((this._Species != value))
				{
					if (this._LookupSpecy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpeciesChanging(value);
					this.SendPropertyChanging();
					this._Species = value;
					this.SendPropertyChanged("Species");
					this.OnSpeciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					if (this._LookupGender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(500)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Animals_Gender", Storage="_LookupGender", ThisKey="Gender", OtherKey="Sex", IsForeignKey=true)]
		public LookupGender LookupGender
		{
			get
			{
				return this._LookupGender.Entity;
			}
			set
			{
				LookupGender previousValue = this._LookupGender.Entity;
				if (((previousValue != value) 
							|| (this._LookupGender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LookupGender.Entity = null;
						previousValue.Animals.Remove(this);
					}
					this._LookupGender.Entity = value;
					if ((value != null))
					{
						value.Animals.Add(this);
						this._Gender = value.Sex;
					}
					else
					{
						this._Gender = default(string);
					}
					this.SendPropertyChanged("LookupGender");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Animals_Projects", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Animals.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Animals.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Animals_Species", Storage="_LookupSpecy", ThisKey="Species", OtherKey="Species", IsForeignKey=true)]
		public LookupSpecy LookupSpecy
		{
			get
			{
				return this._LookupSpecy.Entity;
			}
			set
			{
				LookupSpecy previousValue = this._LookupSpecy.Entity;
				if (((previousValue != value) 
							|| (this._LookupSpecy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LookupSpecy.Entity = null;
						previousValue.Animals.Remove(this);
					}
					this._LookupSpecy.Entity = value;
					if ((value != null))
					{
						value.Animals.Add(this);
						this._Species = value.Species;
					}
					else
					{
						this._Species = default(string);
					}
					this.SendPropertyChanged("LookupSpecy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarDeployments_Animals", Storage="_CollarDeployments", ThisKey="ProjectId,AnimalId", OtherKey="ProjectId,AnimalId", DeleteRule="NO ACTION")]
		public EntitySet<CollarDeployment> CollarDeployments
		{
			get
			{
				return this._CollarDeployments;
			}
			set
			{
				this._CollarDeployments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Locations_Animals", Storage="_Locations", ThisKey="ProjectId,AnimalId", OtherKey="ProjectId,AnimalId", DeleteRule="NO ACTION")]
		public EntitySet<Location> Locations
		{
			get
			{
				return this._Locations;
			}
			set
			{
				this._Locations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Movements_Animals", Storage="_Movements", ThisKey="ProjectId,AnimalId", OtherKey="ProjectId,AnimalId", DeleteRule="NO ACTION")]
		public EntitySet<Movement> Movements
		{
			get
			{
				return this._Movements;
			}
			set
			{
				this._Movements.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CollarDeployments(CollarDeployment entity)
		{
			this.SendPropertyChanging();
			entity.Animal = this;
		}
		
		private void detach_CollarDeployments(CollarDeployment entity)
		{
			this.SendPropertyChanging();
			entity.Animal = null;
		}
		
		private void attach_Locations(Location entity)
		{
			this.SendPropertyChanging();
			entity.Animal = this;
		}
		
		private void detach_Locations(Location entity)
		{
			this.SendPropertyChanging();
			entity.Animal = null;
		}
		
		private void attach_Movements(Movement entity)
		{
			this.SendPropertyChanging();
			entity.Animal = this;
		}
		
		private void detach_Movements(Movement entity)
		{
			this.SendPropertyChanging();
			entity.Animal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CollarDataDebevekFormat")]
	public partial class CollarDataDebevekFormat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FileID;
		
		private int _LineNumber;
		
		private string _CollarID;
		
		private string _AnimalId;
		
		private string _Species;
		
		private string _Group;
		
		private string _Park;
		
		private string _FixDate;
		
		private string _FixTime;
		
		private System.Nullable<double> _FixMonth;
		
		private System.Nullable<double> _FixDay;
		
		private System.Nullable<double> _FixYear;
		
		private System.Nullable<double> _LatWGS84;
		
		private System.Nullable<double> _LonWGS84;
		
		private System.Nullable<double> _Temperature;
		
		private string _Other;
		
		private EntityRef<CollarFile> _CollarFile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIDChanging(int value);
    partial void OnFileIDChanged();
    partial void OnLineNumberChanging(int value);
    partial void OnLineNumberChanged();
    partial void OnCollarIDChanging(string value);
    partial void OnCollarIDChanged();
    partial void OnAnimalIdChanging(string value);
    partial void OnAnimalIdChanged();
    partial void OnSpeciesChanging(string value);
    partial void OnSpeciesChanged();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnParkChanging(string value);
    partial void OnParkChanged();
    partial void OnFixDateChanging(string value);
    partial void OnFixDateChanged();
    partial void OnFixTimeChanging(string value);
    partial void OnFixTimeChanged();
    partial void OnFixMonthChanging(System.Nullable<double> value);
    partial void OnFixMonthChanged();
    partial void OnFixDayChanging(System.Nullable<double> value);
    partial void OnFixDayChanged();
    partial void OnFixYearChanging(System.Nullable<double> value);
    partial void OnFixYearChanged();
    partial void OnLatWGS84Changing(System.Nullable<double> value);
    partial void OnLatWGS84Changed();
    partial void OnLonWGS84Changing(System.Nullable<double> value);
    partial void OnLonWGS84Changed();
    partial void OnTemperatureChanging(System.Nullable<double> value);
    partial void OnTemperatureChanged();
    partial void OnOtherChanging(string value);
    partial void OnOtherChanged();
    #endregion
		
		public CollarDataDebevekFormat()
		{
			this._CollarFile = default(EntityRef<CollarFile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					if (this._CollarFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarID", DbType="Char(6)")]
		public string CollarID
		{
			get
			{
				return this._CollarID;
			}
			set
			{
				if ((this._CollarID != value))
				{
					this.OnCollarIDChanging(value);
					this.SendPropertyChanging();
					this._CollarID = value;
					this.SendPropertyChanged("CollarID");
					this.OnCollarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalId", DbType="Char(6)")]
		public string AnimalId
		{
			get
			{
				return this._AnimalId;
			}
			set
			{
				if ((this._AnimalId != value))
				{
					this.OnAnimalIdChanging(value);
					this.SendPropertyChanging();
					this._AnimalId = value;
					this.SendPropertyChanged("AnimalId");
					this.OnAnimalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Species", DbType="NVarChar(255)")]
		public string Species
		{
			get
			{
				return this._Species;
			}
			set
			{
				if ((this._Species != value))
				{
					this.OnSpeciesChanging(value);
					this.SendPropertyChanging();
					this._Species = value;
					this.SendPropertyChanged("Species");
					this.OnSpeciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group", DbType="NVarChar(255)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Park", DbType="NVarChar(255)")]
		public string Park
		{
			get
			{
				return this._Park;
			}
			set
			{
				if ((this._Park != value))
				{
					this.OnParkChanging(value);
					this.SendPropertyChanging();
					this._Park = value;
					this.SendPropertyChanged("Park");
					this.OnParkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixDate", DbType="NVarChar(255)")]
		public string FixDate
		{
			get
			{
				return this._FixDate;
			}
			set
			{
				if ((this._FixDate != value))
				{
					this.OnFixDateChanging(value);
					this.SendPropertyChanging();
					this._FixDate = value;
					this.SendPropertyChanged("FixDate");
					this.OnFixDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixTime", DbType="NVarChar(255)")]
		public string FixTime
		{
			get
			{
				return this._FixTime;
			}
			set
			{
				if ((this._FixTime != value))
				{
					this.OnFixTimeChanging(value);
					this.SendPropertyChanging();
					this._FixTime = value;
					this.SendPropertyChanged("FixTime");
					this.OnFixTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixMonth", DbType="Float")]
		public System.Nullable<double> FixMonth
		{
			get
			{
				return this._FixMonth;
			}
			set
			{
				if ((this._FixMonth != value))
				{
					this.OnFixMonthChanging(value);
					this.SendPropertyChanging();
					this._FixMonth = value;
					this.SendPropertyChanged("FixMonth");
					this.OnFixMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixDay", DbType="Float")]
		public System.Nullable<double> FixDay
		{
			get
			{
				return this._FixDay;
			}
			set
			{
				if ((this._FixDay != value))
				{
					this.OnFixDayChanging(value);
					this.SendPropertyChanging();
					this._FixDay = value;
					this.SendPropertyChanged("FixDay");
					this.OnFixDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixYear", DbType="Float")]
		public System.Nullable<double> FixYear
		{
			get
			{
				return this._FixYear;
			}
			set
			{
				if ((this._FixYear != value))
				{
					this.OnFixYearChanging(value);
					this.SendPropertyChanging();
					this._FixYear = value;
					this.SendPropertyChanged("FixYear");
					this.OnFixYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatWGS84", DbType="Float")]
		public System.Nullable<double> LatWGS84
		{
			get
			{
				return this._LatWGS84;
			}
			set
			{
				if ((this._LatWGS84 != value))
				{
					this.OnLatWGS84Changing(value);
					this.SendPropertyChanging();
					this._LatWGS84 = value;
					this.SendPropertyChanged("LatWGS84");
					this.OnLatWGS84Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LonWGS84", DbType="Float")]
		public System.Nullable<double> LonWGS84
		{
			get
			{
				return this._LonWGS84;
			}
			set
			{
				if ((this._LonWGS84 != value))
				{
					this.OnLonWGS84Changing(value);
					this.SendPropertyChanging();
					this._LonWGS84 = value;
					this.SendPropertyChanged("LonWGS84");
					this.OnLonWGS84Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temperature", DbType="Float")]
		public System.Nullable<double> Temperature
		{
			get
			{
				return this._Temperature;
			}
			set
			{
				if ((this._Temperature != value))
				{
					this.OnTemperatureChanging(value);
					this.SendPropertyChanging();
					this._Temperature = value;
					this.SendPropertyChanged("Temperature");
					this.OnTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other", DbType="NVarChar(255)")]
		public string Other
		{
			get
			{
				return this._Other;
			}
			set
			{
				if ((this._Other != value))
				{
					this.OnOtherChanging(value);
					this.SendPropertyChanging();
					this._Other = value;
					this.SendPropertyChanged("Other");
					this.OnOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarDataDebevekFormat_CollarFiles", Storage="_CollarFile", ThisKey="FileID", OtherKey="FileId", IsForeignKey=true)]
		public CollarFile CollarFile
		{
			get
			{
				return this._CollarFile.Entity;
			}
			set
			{
				CollarFile previousValue = this._CollarFile.Entity;
				if (((previousValue != value) 
							|| (this._CollarFile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CollarFile.Entity = null;
						previousValue.CollarDataDebevekFormats.Remove(this);
					}
					this._CollarFile.Entity = value;
					if ((value != null))
					{
						value.CollarDataDebevekFormats.Add(this);
						this._FileID = value.FileId;
					}
					else
					{
						this._FileID = default(int);
					}
					this.SendPropertyChanged("CollarFile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CollarDataTelonicsStoreOnBoard")]
	public partial class CollarDataTelonicsStoreOnBoard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FileId;
		
		private int _LineNumber;
		
		private string _Fix_;
		
		private string _Date;
		
		private string _Time;
		
		private string _FixStatus;
		
		private string _StatusText;
		
		private string _VelocityEastMS;
		
		private string _VelocityNorthMS;
		
		private string _VelocityUpMS;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private string _AltitudeM;
		
		private string _PDOP;
		
		private string _HDOP;
		
		private string _VDOP;
		
		private string _TDOP;
		
		private string _TemperatureSensorDeg;
		
		private string _ActivitySensor;
		
		private string _SatelliteData;
		
		private EntityRef<CollarFile> _CollarFile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIdChanging(int value);
    partial void OnFileIdChanged();
    partial void OnLineNumberChanging(int value);
    partial void OnLineNumberChanged();
    partial void OnFix_Changing(string value);
    partial void OnFix_Changed();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnFixStatusChanging(string value);
    partial void OnFixStatusChanged();
    partial void OnStatusTextChanging(string value);
    partial void OnStatusTextChanged();
    partial void OnVelocityEastMSChanging(string value);
    partial void OnVelocityEastMSChanged();
    partial void OnVelocityNorthMSChanging(string value);
    partial void OnVelocityNorthMSChanged();
    partial void OnVelocityUpMSChanging(string value);
    partial void OnVelocityUpMSChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnAltitudeMChanging(string value);
    partial void OnAltitudeMChanged();
    partial void OnPDOPChanging(string value);
    partial void OnPDOPChanged();
    partial void OnHDOPChanging(string value);
    partial void OnHDOPChanged();
    partial void OnVDOPChanging(string value);
    partial void OnVDOPChanged();
    partial void OnTDOPChanging(string value);
    partial void OnTDOPChanged();
    partial void OnTemperatureSensorDegChanging(string value);
    partial void OnTemperatureSensorDegChanged();
    partial void OnActivitySensorChanging(string value);
    partial void OnActivitySensorChanged();
    partial void OnSatelliteDataChanging(string value);
    partial void OnSatelliteDataChanged();
    #endregion
		
		public CollarDataTelonicsStoreOnBoard()
		{
			this._CollarFile = default(EntityRef<CollarFile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					if (this._CollarFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Fix #", Storage="_Fix_", DbType="VarChar(50)")]
		public string Fix_
		{
			get
			{
				return this._Fix_;
			}
			set
			{
				if ((this._Fix_ != value))
				{
					this.OnFix_Changing(value);
					this.SendPropertyChanging();
					this._Fix_ = value;
					this.SendPropertyChanged("Fix_");
					this.OnFix_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Char(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Char(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Fix Status", Storage="_FixStatus", DbType="VarChar(50)")]
		public string FixStatus
		{
			get
			{
				return this._FixStatus;
			}
			set
			{
				if ((this._FixStatus != value))
				{
					this.OnFixStatusChanging(value);
					this.SendPropertyChanging();
					this._FixStatus = value;
					this.SendPropertyChanged("FixStatus");
					this.OnFixStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Status Text", Storage="_StatusText", DbType="VarChar(150)")]
		public string StatusText
		{
			get
			{
				return this._StatusText;
			}
			set
			{
				if ((this._StatusText != value))
				{
					this.OnStatusTextChanging(value);
					this.SendPropertyChanging();
					this._StatusText = value;
					this.SendPropertyChanged("StatusText");
					this.OnStatusTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Velocity East(m s)", Storage="_VelocityEastMS", DbType="VarChar(50)")]
		public string VelocityEastMS
		{
			get
			{
				return this._VelocityEastMS;
			}
			set
			{
				if ((this._VelocityEastMS != value))
				{
					this.OnVelocityEastMSChanging(value);
					this.SendPropertyChanging();
					this._VelocityEastMS = value;
					this.SendPropertyChanged("VelocityEastMS");
					this.OnVelocityEastMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Velocity North(m s)", Storage="_VelocityNorthMS", DbType="VarChar(50)")]
		public string VelocityNorthMS
		{
			get
			{
				return this._VelocityNorthMS;
			}
			set
			{
				if ((this._VelocityNorthMS != value))
				{
					this.OnVelocityNorthMSChanging(value);
					this.SendPropertyChanging();
					this._VelocityNorthMS = value;
					this.SendPropertyChanged("VelocityNorthMS");
					this.OnVelocityNorthMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Velocity Up(m s)", Storage="_VelocityUpMS", DbType="VarChar(50)")]
		public string VelocityUpMS
		{
			get
			{
				return this._VelocityUpMS;
			}
			set
			{
				if ((this._VelocityUpMS != value))
				{
					this.OnVelocityUpMSChanging(value);
					this.SendPropertyChanging();
					this._VelocityUpMS = value;
					this.SendPropertyChanged("VelocityUpMS");
					this.OnVelocityUpMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="VarChar(50)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="VarChar(50)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Altitude(m)", Storage="_AltitudeM", DbType="VarChar(50)")]
		public string AltitudeM
		{
			get
			{
				return this._AltitudeM;
			}
			set
			{
				if ((this._AltitudeM != value))
				{
					this.OnAltitudeMChanging(value);
					this.SendPropertyChanging();
					this._AltitudeM = value;
					this.SendPropertyChanged("AltitudeM");
					this.OnAltitudeMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDOP", DbType="VarChar(50)")]
		public string PDOP
		{
			get
			{
				return this._PDOP;
			}
			set
			{
				if ((this._PDOP != value))
				{
					this.OnPDOPChanging(value);
					this.SendPropertyChanging();
					this._PDOP = value;
					this.SendPropertyChanged("PDOP");
					this.OnPDOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HDOP", DbType="VarChar(50)")]
		public string HDOP
		{
			get
			{
				return this._HDOP;
			}
			set
			{
				if ((this._HDOP != value))
				{
					this.OnHDOPChanging(value);
					this.SendPropertyChanging();
					this._HDOP = value;
					this.SendPropertyChanged("HDOP");
					this.OnHDOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VDOP", DbType="VarChar(50)")]
		public string VDOP
		{
			get
			{
				return this._VDOP;
			}
			set
			{
				if ((this._VDOP != value))
				{
					this.OnVDOPChanging(value);
					this.SendPropertyChanging();
					this._VDOP = value;
					this.SendPropertyChanged("VDOP");
					this.OnVDOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDOP", DbType="VarChar(50)")]
		public string TDOP
		{
			get
			{
				return this._TDOP;
			}
			set
			{
				if ((this._TDOP != value))
				{
					this.OnTDOPChanging(value);
					this.SendPropertyChanging();
					this._TDOP = value;
					this.SendPropertyChanged("TDOP");
					this.OnTDOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Temperature Sensor(deg )", Storage="_TemperatureSensorDeg", DbType="VarChar(50)")]
		public string TemperatureSensorDeg
		{
			get
			{
				return this._TemperatureSensorDeg;
			}
			set
			{
				if ((this._TemperatureSensorDeg != value))
				{
					this.OnTemperatureSensorDegChanging(value);
					this.SendPropertyChanging();
					this._TemperatureSensorDeg = value;
					this.SendPropertyChanged("TemperatureSensorDeg");
					this.OnTemperatureSensorDegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Activity Sensor", Storage="_ActivitySensor", DbType="VarChar(50)")]
		public string ActivitySensor
		{
			get
			{
				return this._ActivitySensor;
			}
			set
			{
				if ((this._ActivitySensor != value))
				{
					this.OnActivitySensorChanging(value);
					this.SendPropertyChanging();
					this._ActivitySensor = value;
					this.SendPropertyChanged("ActivitySensor");
					this.OnActivitySensorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Satellite Data", Storage="_SatelliteData", DbType="VarChar(150)")]
		public string SatelliteData
		{
			get
			{
				return this._SatelliteData;
			}
			set
			{
				if ((this._SatelliteData != value))
				{
					this.OnSatelliteDataChanging(value);
					this.SendPropertyChanging();
					this._SatelliteData = value;
					this.SendPropertyChanged("SatelliteData");
					this.OnSatelliteDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarDataTelonicsStoreOnBoard_CollarFiles", Storage="_CollarFile", ThisKey="FileId", OtherKey="FileId", IsForeignKey=true)]
		public CollarFile CollarFile
		{
			get
			{
				return this._CollarFile.Entity;
			}
			set
			{
				CollarFile previousValue = this._CollarFile.Entity;
				if (((previousValue != value) 
							|| (this._CollarFile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CollarFile.Entity = null;
						previousValue.CollarDataTelonicsStoreOnBoards.Remove(this);
					}
					this._CollarFile.Entity = value;
					if ((value != null))
					{
						value.CollarDataTelonicsStoreOnBoards.Add(this);
						this._FileId = value.FileId;
					}
					else
					{
						this._FileId = default(int);
					}
					this.SendPropertyChanged("CollarFile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CollarDeployments")]
	public partial class CollarDeployment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectId;
		
		private string _AnimalId;
		
		private string _CollarManufacturer;
		
		private string _CollarId;
		
		private System.DateTime _DeploymentDate;
		
		private System.Nullable<System.DateTime> _RetrievalDate;
		
		private EntityRef<Animal> _Animal;
		
		private EntityRef<Collar> _Collar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnAnimalIdChanging(string value);
    partial void OnAnimalIdChanged();
    partial void OnCollarManufacturerChanging(string value);
    partial void OnCollarManufacturerChanged();
    partial void OnCollarIdChanging(string value);
    partial void OnCollarIdChanged();
    partial void OnDeploymentDateChanging(System.DateTime value);
    partial void OnDeploymentDateChanged();
    partial void OnRetrievalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRetrievalDateChanged();
    #endregion
		
		public CollarDeployment()
		{
			this._Animal = default(EntityRef<Animal>);
			this._Collar = default(EntityRef<Collar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AnimalId
		{
			get
			{
				return this._AnimalId;
			}
			set
			{
				if ((this._AnimalId != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnimalIdChanging(value);
					this.SendPropertyChanging();
					this._AnimalId = value;
					this.SendPropertyChanged("AnimalId");
					this.OnAnimalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarManufacturer", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CollarManufacturer
		{
			get
			{
				return this._CollarManufacturer;
			}
			set
			{
				if ((this._CollarManufacturer != value))
				{
					if (this._Collar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollarManufacturerChanging(value);
					this.SendPropertyChanging();
					this._CollarManufacturer = value;
					this.SendPropertyChanged("CollarManufacturer");
					this.OnCollarManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CollarId
		{
			get
			{
				return this._CollarId;
			}
			set
			{
				if ((this._CollarId != value))
				{
					if (this._Collar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollarIdChanging(value);
					this.SendPropertyChanging();
					this._CollarId = value;
					this.SendPropertyChanged("CollarId");
					this.OnCollarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeploymentDate", DbType="DateTime2(7) NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DeploymentDate
		{
			get
			{
				return this._DeploymentDate;
			}
			set
			{
				if ((this._DeploymentDate != value))
				{
					this.OnDeploymentDateChanging(value);
					this.SendPropertyChanging();
					this._DeploymentDate = value;
					this.SendPropertyChanged("DeploymentDate");
					this.OnDeploymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetrievalDate", DbType="DateTime2(7)")]
		public System.Nullable<System.DateTime> RetrievalDate
		{
			get
			{
				return this._RetrievalDate;
			}
			set
			{
				if ((this._RetrievalDate != value))
				{
					this.OnRetrievalDateChanging(value);
					this.SendPropertyChanging();
					this._RetrievalDate = value;
					this.SendPropertyChanged("RetrievalDate");
					this.OnRetrievalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarDeployments_Animals", Storage="_Animal", ThisKey="ProjectId,AnimalId", OtherKey="ProjectId,AnimalId", IsForeignKey=true)]
		public Animal Animal
		{
			get
			{
				return this._Animal.Entity;
			}
			set
			{
				Animal previousValue = this._Animal.Entity;
				if (((previousValue != value) 
							|| (this._Animal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Animal.Entity = null;
						previousValue.CollarDeployments.Remove(this);
					}
					this._Animal.Entity = value;
					if ((value != null))
					{
						value.CollarDeployments.Add(this);
						this._ProjectId = value.ProjectId;
						this._AnimalId = value.AnimalId;
					}
					else
					{
						this._ProjectId = default(string);
						this._AnimalId = default(string);
					}
					this.SendPropertyChanged("Animal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarDeployments_Collars", Storage="_Collar", ThisKey="CollarManufacturer,CollarId", OtherKey="CollarManufacturer,CollarId", IsForeignKey=true)]
		public Collar Collar
		{
			get
			{
				return this._Collar.Entity;
			}
			set
			{
				Collar previousValue = this._Collar.Entity;
				if (((previousValue != value) 
							|| (this._Collar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Collar.Entity = null;
						previousValue.CollarDeployments.Remove(this);
					}
					this._Collar.Entity = value;
					if ((value != null))
					{
						value.CollarDeployments.Add(this);
						this._CollarManufacturer = value.CollarManufacturer;
						this._CollarId = value.CollarId;
					}
					else
					{
						this._CollarManufacturer = default(string);
						this._CollarId = default(string);
					}
					this.SendPropertyChanged("Collar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CollarFiles")]
	public partial class CollarFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FileId;
		
		private string _FileName;
		
		private System.DateTime _UploadDate;
		
		private string _Project;
		
		private string _UserName;
		
		private string _CollarManufacturer;
		
		private string _CollarId;
		
		private string _Format;
		
		private string _Status;
		
		private System.Data.Linq.Binary _Contents;
		
		private EntitySet<CollarDataDebevekFormat> _CollarDataDebevekFormats;
		
		private EntitySet<CollarDataTelonicsStoreOnBoard> _CollarDataTelonicsStoreOnBoards;
		
		private EntityRef<LookupCollarFileFormat> _LookupCollarFileFormat;
		
		private EntityRef<LookupCollarFileStatus> _LookupCollarFileStatus;
		
		private EntityRef<LookupCollarManufacturer> _LookupCollarManufacturer;
		
		private EntityRef<Project> _ProjectProject;
		
		private EntitySet<CollarFix> _CollarFixes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIdChanging(int value);
    partial void OnFileIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnUploadDateChanging(System.DateTime value);
    partial void OnUploadDateChanged();
    partial void OnProjectChanging(string value);
    partial void OnProjectChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnCollarManufacturerChanging(string value);
    partial void OnCollarManufacturerChanged();
    partial void OnCollarIdChanging(string value);
    partial void OnCollarIdChanged();
    partial void OnFormatChanging(string value);
    partial void OnFormatChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnContentsChanging(System.Data.Linq.Binary value);
    partial void OnContentsChanged();
    #endregion
		
		public CollarFile()
		{
			this._CollarDataDebevekFormats = new EntitySet<CollarDataDebevekFormat>(new Action<CollarDataDebevekFormat>(this.attach_CollarDataDebevekFormats), new Action<CollarDataDebevekFormat>(this.detach_CollarDataDebevekFormats));
			this._CollarDataTelonicsStoreOnBoards = new EntitySet<CollarDataTelonicsStoreOnBoard>(new Action<CollarDataTelonicsStoreOnBoard>(this.attach_CollarDataTelonicsStoreOnBoards), new Action<CollarDataTelonicsStoreOnBoard>(this.detach_CollarDataTelonicsStoreOnBoards));
			this._LookupCollarFileFormat = default(EntityRef<LookupCollarFileFormat>);
			this._LookupCollarFileStatus = default(EntityRef<LookupCollarFileStatus>);
			this._LookupCollarManufacturer = default(EntityRef<LookupCollarManufacturer>);
			this._ProjectProject = default(EntityRef<Project>);
			this._CollarFixes = new EntitySet<CollarFix>(new Action<CollarFix>(this.attach_CollarFixes), new Action<CollarFix>(this.detach_CollarFixes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDate", DbType="DateTime2(7) NOT NULL")]
		public System.DateTime UploadDate
		{
			get
			{
				return this._UploadDate;
			}
			set
			{
				if ((this._UploadDate != value))
				{
					this.OnUploadDateChanging(value);
					this.SendPropertyChanging();
					this._UploadDate = value;
					this.SendPropertyChanged("UploadDate");
					this.OnUploadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					if (this._ProjectProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectChanging(value);
					this.SendPropertyChanging();
					this._Project = value;
					this.SendPropertyChanged("Project");
					this.OnProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarManufacturer", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string CollarManufacturer
		{
			get
			{
				return this._CollarManufacturer;
			}
			set
			{
				if ((this._CollarManufacturer != value))
				{
					if (this._LookupCollarManufacturer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollarManufacturerChanging(value);
					this.SendPropertyChanging();
					this._CollarManufacturer = value;
					this.SendPropertyChanged("CollarManufacturer");
					this.OnCollarManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarId", DbType="VarChar(16)")]
		public string CollarId
		{
			get
			{
				return this._CollarId;
			}
			set
			{
				if ((this._CollarId != value))
				{
					this.OnCollarIdChanging(value);
					this.SendPropertyChanging();
					this._CollarId = value;
					this.SendPropertyChanged("CollarId");
					this.OnCollarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Format", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string Format
		{
			get
			{
				return this._Format;
			}
			set
			{
				if ((this._Format != value))
				{
					if (this._LookupCollarFileFormat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormatChanging(value);
					this.SendPropertyChanging();
					this._Format = value;
					this.SendPropertyChanged("Format");
					this.OnFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._LookupCollarFileStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarDataDebevekFormat_CollarFiles", Storage="_CollarDataDebevekFormats", ThisKey="FileId", OtherKey="FileID", DeleteRule="NO ACTION")]
		public EntitySet<CollarDataDebevekFormat> CollarDataDebevekFormats
		{
			get
			{
				return this._CollarDataDebevekFormats;
			}
			set
			{
				this._CollarDataDebevekFormats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarDataTelonicsStoreOnBoard_CollarFiles", Storage="_CollarDataTelonicsStoreOnBoards", ThisKey="FileId", OtherKey="FileId", DeleteRule="NO ACTION")]
		public EntitySet<CollarDataTelonicsStoreOnBoard> CollarDataTelonicsStoreOnBoards
		{
			get
			{
				return this._CollarDataTelonicsStoreOnBoards;
			}
			set
			{
				this._CollarDataTelonicsStoreOnBoards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarFiles_LookupCollarFileFormats", Storage="_LookupCollarFileFormat", ThisKey="Format", OtherKey="Code", IsForeignKey=true)]
		public LookupCollarFileFormat LookupCollarFileFormat
		{
			get
			{
				return this._LookupCollarFileFormat.Entity;
			}
			set
			{
				LookupCollarFileFormat previousValue = this._LookupCollarFileFormat.Entity;
				if (((previousValue != value) 
							|| (this._LookupCollarFileFormat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LookupCollarFileFormat.Entity = null;
						previousValue.CollarFiles.Remove(this);
					}
					this._LookupCollarFileFormat.Entity = value;
					if ((value != null))
					{
						value.CollarFiles.Add(this);
						this._Format = value.Code;
					}
					else
					{
						this._Format = default(string);
					}
					this.SendPropertyChanged("LookupCollarFileFormat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarFiles_LookupCollarFileStatus", Storage="_LookupCollarFileStatus", ThisKey="Status", OtherKey="Code", IsForeignKey=true)]
		public LookupCollarFileStatus LookupCollarFileStatus
		{
			get
			{
				return this._LookupCollarFileStatus.Entity;
			}
			set
			{
				LookupCollarFileStatus previousValue = this._LookupCollarFileStatus.Entity;
				if (((previousValue != value) 
							|| (this._LookupCollarFileStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LookupCollarFileStatus.Entity = null;
						previousValue.CollarFiles.Remove(this);
					}
					this._LookupCollarFileStatus.Entity = value;
					if ((value != null))
					{
						value.CollarFiles.Add(this);
						this._Status = value.Code;
					}
					else
					{
						this._Status = default(string);
					}
					this.SendPropertyChanged("LookupCollarFileStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarFiles_LookupCollarManufacturers", Storage="_LookupCollarManufacturer", ThisKey="CollarManufacturer", OtherKey="CollarManufacturer", IsForeignKey=true)]
		public LookupCollarManufacturer LookupCollarManufacturer
		{
			get
			{
				return this._LookupCollarManufacturer.Entity;
			}
			set
			{
				LookupCollarManufacturer previousValue = this._LookupCollarManufacturer.Entity;
				if (((previousValue != value) 
							|| (this._LookupCollarManufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LookupCollarManufacturer.Entity = null;
						previousValue.CollarFiles.Remove(this);
					}
					this._LookupCollarManufacturer.Entity = value;
					if ((value != null))
					{
						value.CollarFiles.Add(this);
						this._CollarManufacturer = value.CollarManufacturer;
					}
					else
					{
						this._CollarManufacturer = default(string);
					}
					this.SendPropertyChanged("LookupCollarManufacturer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarFiles_Projects", Storage="_ProjectProject", ThisKey="Project", OtherKey="ProjectId", IsForeignKey=true)]
		public Project ProjectProject
		{
			get
			{
				return this._ProjectProject.Entity;
			}
			set
			{
				Project previousValue = this._ProjectProject.Entity;
				if (((previousValue != value) 
							|| (this._ProjectProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectProject.Entity = null;
						previousValue.CollarFiles.Remove(this);
					}
					this._ProjectProject.Entity = value;
					if ((value != null))
					{
						value.CollarFiles.Add(this);
						this._Project = value.ProjectId;
					}
					else
					{
						this._Project = default(string);
					}
					this.SendPropertyChanged("ProjectProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarFixes_CollarFiles", Storage="_CollarFixes", ThisKey="FileId", OtherKey="FileId", DeleteRule="NO ACTION")]
		public EntitySet<CollarFix> CollarFixes
		{
			get
			{
				return this._CollarFixes;
			}
			set
			{
				this._CollarFixes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CollarDataDebevekFormats(CollarDataDebevekFormat entity)
		{
			this.SendPropertyChanging();
			entity.CollarFile = this;
		}
		
		private void detach_CollarDataDebevekFormats(CollarDataDebevekFormat entity)
		{
			this.SendPropertyChanging();
			entity.CollarFile = null;
		}
		
		private void attach_CollarDataTelonicsStoreOnBoards(CollarDataTelonicsStoreOnBoard entity)
		{
			this.SendPropertyChanging();
			entity.CollarFile = this;
		}
		
		private void detach_CollarDataTelonicsStoreOnBoards(CollarDataTelonicsStoreOnBoard entity)
		{
			this.SendPropertyChanging();
			entity.CollarFile = null;
		}
		
		private void attach_CollarFixes(CollarFix entity)
		{
			this.SendPropertyChanging();
			entity.CollarFile = this;
		}
		
		private void detach_CollarFixes(CollarFix entity)
		{
			this.SendPropertyChanging();
			entity.CollarFile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CollarFixes")]
	public partial class CollarFix : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _FixId;
		
		private System.Nullable<long> _HiddenBy;
		
		private int _FileId;
		
		private int _LineNumber;
		
		private string _CollarManufacturer;
		
		private string _CollarId;
		
		private System.DateTime _FixDate;
		
		private double _Lat;
		
		private double _Lon;
		
		private EntityRef<CollarFile> _CollarFile;
		
		private EntityRef<Collar> _Collar;
		
		private EntitySet<Location> _Locations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFixIdChanging(long value);
    partial void OnFixIdChanged();
    partial void OnHiddenByChanging(System.Nullable<long> value);
    partial void OnHiddenByChanged();
    partial void OnFileIdChanging(int value);
    partial void OnFileIdChanged();
    partial void OnLineNumberChanging(int value);
    partial void OnLineNumberChanged();
    partial void OnCollarManufacturerChanging(string value);
    partial void OnCollarManufacturerChanged();
    partial void OnCollarIdChanging(string value);
    partial void OnCollarIdChanged();
    partial void OnFixDateChanging(System.DateTime value);
    partial void OnFixDateChanged();
    partial void OnLatChanging(double value);
    partial void OnLatChanged();
    partial void OnLonChanging(double value);
    partial void OnLonChanged();
    #endregion
		
		public CollarFix()
		{
			this._CollarFile = default(EntityRef<CollarFile>);
			this._Collar = default(EntityRef<Collar>);
			this._Locations = new EntitySet<Location>(new Action<Location>(this.attach_Locations), new Action<Location>(this.detach_Locations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long FixId
		{
			get
			{
				return this._FixId;
			}
			set
			{
				if ((this._FixId != value))
				{
					this.OnFixIdChanging(value);
					this.SendPropertyChanging();
					this._FixId = value;
					this.SendPropertyChanged("FixId");
					this.OnFixIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenBy", DbType="BigInt")]
		public System.Nullable<long> HiddenBy
		{
			get
			{
				return this._HiddenBy;
			}
			set
			{
				if ((this._HiddenBy != value))
				{
					this.OnHiddenByChanging(value);
					this.SendPropertyChanging();
					this._HiddenBy = value;
					this.SendPropertyChanged("HiddenBy");
					this.OnHiddenByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="Int NOT NULL")]
		public int FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					if (this._CollarFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="Int NOT NULL")]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarManufacturer", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string CollarManufacturer
		{
			get
			{
				return this._CollarManufacturer;
			}
			set
			{
				if ((this._CollarManufacturer != value))
				{
					if (this._Collar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollarManufacturerChanging(value);
					this.SendPropertyChanging();
					this._CollarManufacturer = value;
					this.SendPropertyChanged("CollarManufacturer");
					this.OnCollarManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarId", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string CollarId
		{
			get
			{
				return this._CollarId;
			}
			set
			{
				if ((this._CollarId != value))
				{
					if (this._Collar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollarIdChanging(value);
					this.SendPropertyChanging();
					this._CollarId = value;
					this.SendPropertyChanged("CollarId");
					this.OnCollarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixDate", DbType="DateTime2(7) NOT NULL")]
		public System.DateTime FixDate
		{
			get
			{
				return this._FixDate;
			}
			set
			{
				if ((this._FixDate != value))
				{
					this.OnFixDateChanging(value);
					this.SendPropertyChanging();
					this._FixDate = value;
					this.SendPropertyChanged("FixDate");
					this.OnFixDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lat", DbType="Float NOT NULL")]
		public double Lat
		{
			get
			{
				return this._Lat;
			}
			set
			{
				if ((this._Lat != value))
				{
					this.OnLatChanging(value);
					this.SendPropertyChanging();
					this._Lat = value;
					this.SendPropertyChanged("Lat");
					this.OnLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lon", DbType="Float NOT NULL")]
		public double Lon
		{
			get
			{
				return this._Lon;
			}
			set
			{
				if ((this._Lon != value))
				{
					this.OnLonChanging(value);
					this.SendPropertyChanging();
					this._Lon = value;
					this.SendPropertyChanged("Lon");
					this.OnLonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarFixes_CollarFiles", Storage="_CollarFile", ThisKey="FileId", OtherKey="FileId", IsForeignKey=true)]
		public CollarFile CollarFile
		{
			get
			{
				return this._CollarFile.Entity;
			}
			set
			{
				CollarFile previousValue = this._CollarFile.Entity;
				if (((previousValue != value) 
							|| (this._CollarFile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CollarFile.Entity = null;
						previousValue.CollarFixes.Remove(this);
					}
					this._CollarFile.Entity = value;
					if ((value != null))
					{
						value.CollarFixes.Add(this);
						this._FileId = value.FileId;
					}
					else
					{
						this._FileId = default(int);
					}
					this.SendPropertyChanged("CollarFile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarFixes_Collars", Storage="_Collar", ThisKey="CollarManufacturer,CollarId", OtherKey="CollarManufacturer,CollarId", IsForeignKey=true)]
		public Collar Collar
		{
			get
			{
				return this._Collar.Entity;
			}
			set
			{
				Collar previousValue = this._Collar.Entity;
				if (((previousValue != value) 
							|| (this._Collar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Collar.Entity = null;
						previousValue.CollarFixes.Remove(this);
					}
					this._Collar.Entity = value;
					if ((value != null))
					{
						value.CollarFixes.Add(this);
						this._CollarManufacturer = value.CollarManufacturer;
						this._CollarId = value.CollarId;
					}
					else
					{
						this._CollarManufacturer = default(string);
						this._CollarId = default(string);
					}
					this.SendPropertyChanged("Collar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Locations_CollarFixes", Storage="_Locations", ThisKey="FixId", OtherKey="FixId", DeleteRule="NO ACTION")]
		public EntitySet<Location> Locations
		{
			get
			{
				return this._Locations;
			}
			set
			{
				this._Locations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Locations(Location entity)
		{
			this.SendPropertyChanging();
			entity.CollarFix = this;
		}
		
		private void detach_Locations(Location entity)
		{
			this.SendPropertyChanging();
			entity.CollarFix = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Collars")]
	public partial class Collar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CollarManufacturer;
		
		private string _CollarId;
		
		private string _CollarModel;
		
		private string _Manager;
		
		private string _Owner;
		
		private string _AlternativeId;
		
		private string _SerialNumber;
		
		private System.Nullable<double> _Frequency;
		
		private string _DownloadInfo;
		
		private string _Notes;
		
		private EntitySet<CollarDeployment> _CollarDeployments;
		
		private EntitySet<CollarFix> _CollarFixes;
		
		private EntityRef<LookupCollarManufacturer> _LookupCollarManufacturer;
		
		private EntityRef<LookupCollarModel> _LookupCollarModel;
		
		private EntityRef<ProjectInvestigator> _ProjectInvestigator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCollarManufacturerChanging(string value);
    partial void OnCollarManufacturerChanged();
    partial void OnCollarIdChanging(string value);
    partial void OnCollarIdChanged();
    partial void OnCollarModelChanging(string value);
    partial void OnCollarModelChanged();
    partial void OnManagerChanging(string value);
    partial void OnManagerChanged();
    partial void OnOwnerChanging(string value);
    partial void OnOwnerChanged();
    partial void OnAlternativeIdChanging(string value);
    partial void OnAlternativeIdChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    partial void OnFrequencyChanging(System.Nullable<double> value);
    partial void OnFrequencyChanged();
    partial void OnDownloadInfoChanging(string value);
    partial void OnDownloadInfoChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Collar()
		{
			this._CollarDeployments = new EntitySet<CollarDeployment>(new Action<CollarDeployment>(this.attach_CollarDeployments), new Action<CollarDeployment>(this.detach_CollarDeployments));
			this._CollarFixes = new EntitySet<CollarFix>(new Action<CollarFix>(this.attach_CollarFixes), new Action<CollarFix>(this.detach_CollarFixes));
			this._LookupCollarManufacturer = default(EntityRef<LookupCollarManufacturer>);
			this._LookupCollarModel = default(EntityRef<LookupCollarModel>);
			this._ProjectInvestigator = default(EntityRef<ProjectInvestigator>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarManufacturer", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CollarManufacturer
		{
			get
			{
				return this._CollarManufacturer;
			}
			set
			{
				if ((this._CollarManufacturer != value))
				{
					if (this._LookupCollarManufacturer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollarManufacturerChanging(value);
					this.SendPropertyChanging();
					this._CollarManufacturer = value;
					this.SendPropertyChanged("CollarManufacturer");
					this.OnCollarManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CollarId
		{
			get
			{
				return this._CollarId;
			}
			set
			{
				if ((this._CollarId != value))
				{
					this.OnCollarIdChanging(value);
					this.SendPropertyChanging();
					this._CollarId = value;
					this.SendPropertyChanged("CollarId");
					this.OnCollarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarModel", DbType="VarChar(24) NOT NULL", CanBeNull=false)]
		public string CollarModel
		{
			get
			{
				return this._CollarModel;
			}
			set
			{
				if ((this._CollarModel != value))
				{
					if (this._LookupCollarModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollarModelChanging(value);
					this.SendPropertyChanging();
					this._CollarModel = value;
					this.SendPropertyChanged("CollarModel");
					this.OnCollarModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					if (this._ProjectInvestigator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagerChanging(value);
					this.SendPropertyChanging();
					this._Manager = value;
					this.SendPropertyChanged("Manager");
					this.OnManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="NVarChar(100)")]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeId", DbType="VarChar(16)")]
		public string AlternativeId
		{
			get
			{
				return this._AlternativeId;
			}
			set
			{
				if ((this._AlternativeId != value))
				{
					this.OnAlternativeIdChanging(value);
					this.SendPropertyChanging();
					this._AlternativeId = value;
					this.SendPropertyChanged("AlternativeId");
					this.OnAlternativeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="VarChar(100)")]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Float")]
		public System.Nullable<double> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadInfo", DbType="VarChar(200)")]
		public string DownloadInfo
		{
			get
			{
				return this._DownloadInfo;
			}
			set
			{
				if ((this._DownloadInfo != value))
				{
					this.OnDownloadInfoChanging(value);
					this.SendPropertyChanging();
					this._DownloadInfo = value;
					this.SendPropertyChanged("DownloadInfo");
					this.OnDownloadInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarDeployments_Collars", Storage="_CollarDeployments", ThisKey="CollarManufacturer,CollarId", OtherKey="CollarManufacturer,CollarId", DeleteRule="NO ACTION")]
		public EntitySet<CollarDeployment> CollarDeployments
		{
			get
			{
				return this._CollarDeployments;
			}
			set
			{
				this._CollarDeployments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarFixes_Collars", Storage="_CollarFixes", ThisKey="CollarManufacturer,CollarId", OtherKey="CollarManufacturer,CollarId", DeleteRule="NO ACTION")]
		public EntitySet<CollarFix> CollarFixes
		{
			get
			{
				return this._CollarFixes;
			}
			set
			{
				this._CollarFixes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Collars_LookupCollarManufacturers", Storage="_LookupCollarManufacturer", ThisKey="CollarManufacturer", OtherKey="CollarManufacturer", IsForeignKey=true)]
		public LookupCollarManufacturer LookupCollarManufacturer
		{
			get
			{
				return this._LookupCollarManufacturer.Entity;
			}
			set
			{
				LookupCollarManufacturer previousValue = this._LookupCollarManufacturer.Entity;
				if (((previousValue != value) 
							|| (this._LookupCollarManufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LookupCollarManufacturer.Entity = null;
						previousValue.Collars.Remove(this);
					}
					this._LookupCollarManufacturer.Entity = value;
					if ((value != null))
					{
						value.Collars.Add(this);
						this._CollarManufacturer = value.CollarManufacturer;
					}
					else
					{
						this._CollarManufacturer = default(string);
					}
					this.SendPropertyChanged("LookupCollarManufacturer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Collars_LookupCollarModels", Storage="_LookupCollarModel", ThisKey="CollarModel", OtherKey="CollarModel", IsForeignKey=true)]
		public LookupCollarModel LookupCollarModel
		{
			get
			{
				return this._LookupCollarModel.Entity;
			}
			set
			{
				LookupCollarModel previousValue = this._LookupCollarModel.Entity;
				if (((previousValue != value) 
							|| (this._LookupCollarModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LookupCollarModel.Entity = null;
						previousValue.Collars.Remove(this);
					}
					this._LookupCollarModel.Entity = value;
					if ((value != null))
					{
						value.Collars.Add(this);
						this._CollarModel = value.CollarModel;
					}
					else
					{
						this._CollarModel = default(string);
					}
					this.SendPropertyChanged("LookupCollarModel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Collars_Managers", Storage="_ProjectInvestigator", ThisKey="Manager", OtherKey="Login", IsForeignKey=true)]
		public ProjectInvestigator ProjectInvestigator
		{
			get
			{
				return this._ProjectInvestigator.Entity;
			}
			set
			{
				ProjectInvestigator previousValue = this._ProjectInvestigator.Entity;
				if (((previousValue != value) 
							|| (this._ProjectInvestigator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectInvestigator.Entity = null;
						previousValue.Collars.Remove(this);
					}
					this._ProjectInvestigator.Entity = value;
					if ((value != null))
					{
						value.Collars.Add(this);
						this._Manager = value.Login;
					}
					else
					{
						this._Manager = default(string);
					}
					this.SendPropertyChanged("ProjectInvestigator");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CollarDeployments(CollarDeployment entity)
		{
			this.SendPropertyChanging();
			entity.Collar = this;
		}
		
		private void detach_CollarDeployments(CollarDeployment entity)
		{
			this.SendPropertyChanging();
			entity.Collar = null;
		}
		
		private void attach_CollarFixes(CollarFix entity)
		{
			this.SendPropertyChanging();
			entity.Collar = this;
		}
		
		private void detach_CollarFixes(CollarFix entity)
		{
			this.SendPropertyChanging();
			entity.Collar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Locations")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectId;
		
		private string _AnimalId;
		
		private System.DateTime _FixDate;
		
		private long _FixId;
		
		private string _Status;
		
		private EntityRef<Animal> _Animal;
		
		private EntityRef<CollarFix> _CollarFix;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnAnimalIdChanging(string value);
    partial void OnAnimalIdChanged();
    partial void OnFixDateChanging(System.DateTime value);
    partial void OnFixDateChanged();
    partial void OnFixIdChanging(long value);
    partial void OnFixIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Location()
		{
			this._Animal = default(EntityRef<Animal>);
			this._CollarFix = default(EntityRef<CollarFix>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AnimalId
		{
			get
			{
				return this._AnimalId;
			}
			set
			{
				if ((this._AnimalId != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnimalIdChanging(value);
					this.SendPropertyChanging();
					this._AnimalId = value;
					this.SendPropertyChanged("AnimalId");
					this.OnAnimalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixDate", DbType="DateTime2(7) NOT NULL", IsPrimaryKey=true)]
		public System.DateTime FixDate
		{
			get
			{
				return this._FixDate;
			}
			set
			{
				if ((this._FixDate != value))
				{
					this.OnFixDateChanging(value);
					this.SendPropertyChanging();
					this._FixDate = value;
					this.SendPropertyChanged("FixDate");
					this.OnFixDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixId", DbType="BigInt NOT NULL")]
		public long FixId
		{
			get
			{
				return this._FixId;
			}
			set
			{
				if ((this._FixId != value))
				{
					if (this._CollarFix.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFixIdChanging(value);
					this.SendPropertyChanging();
					this._FixId = value;
					this.SendPropertyChanged("FixId");
					this.OnFixIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Locations_Animals", Storage="_Animal", ThisKey="ProjectId,AnimalId", OtherKey="ProjectId,AnimalId", IsForeignKey=true)]
		public Animal Animal
		{
			get
			{
				return this._Animal.Entity;
			}
			set
			{
				Animal previousValue = this._Animal.Entity;
				if (((previousValue != value) 
							|| (this._Animal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Animal.Entity = null;
						previousValue.Locations.Remove(this);
					}
					this._Animal.Entity = value;
					if ((value != null))
					{
						value.Locations.Add(this);
						this._ProjectId = value.ProjectId;
						this._AnimalId = value.AnimalId;
					}
					else
					{
						this._ProjectId = default(string);
						this._AnimalId = default(string);
					}
					this.SendPropertyChanged("Animal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Locations_CollarFixes", Storage="_CollarFix", ThisKey="FixId", OtherKey="FixId", IsForeignKey=true)]
		public CollarFix CollarFix
		{
			get
			{
				return this._CollarFix.Entity;
			}
			set
			{
				CollarFix previousValue = this._CollarFix.Entity;
				if (((previousValue != value) 
							|| (this._CollarFix.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CollarFix.Entity = null;
						previousValue.Locations.Remove(this);
					}
					this._CollarFix.Entity = value;
					if ((value != null))
					{
						value.Locations.Add(this);
						this._FixId = value.FixId;
					}
					else
					{
						this._FixId = default(long);
					}
					this.SendPropertyChanged("CollarFix");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LookupCollarFileFormats")]
	public partial class LookupCollarFileFormat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _CollarManufacturer;
		
		private string _Name;
		
		private string _Description;
		
		private string _TableName;
		
		private string _HasCollarIdColumn;
		
		private EntitySet<CollarFile> _CollarFiles;
		
		private EntityRef<LookupCollarManufacturer> _LookupCollarManufacturer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCollarManufacturerChanging(string value);
    partial void OnCollarManufacturerChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnHasCollarIdColumnChanging(string value);
    partial void OnHasCollarIdColumnChanged();
    #endregion
		
		public LookupCollarFileFormat()
		{
			this._CollarFiles = new EntitySet<CollarFile>(new Action<CollarFile>(this.attach_CollarFiles), new Action<CollarFile>(this.detach_CollarFiles));
			this._LookupCollarManufacturer = default(EntityRef<LookupCollarManufacturer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(1) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarManufacturer", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string CollarManufacturer
		{
			get
			{
				return this._CollarManufacturer;
			}
			set
			{
				if ((this._CollarManufacturer != value))
				{
					if (this._LookupCollarManufacturer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollarManufacturerChanging(value);
					this.SendPropertyChanging();
					this._CollarManufacturer = value;
					this.SendPropertyChanged("CollarManufacturer");
					this.OnCollarManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasCollarIdColumn", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string HasCollarIdColumn
		{
			get
			{
				return this._HasCollarIdColumn;
			}
			set
			{
				if ((this._HasCollarIdColumn != value))
				{
					this.OnHasCollarIdColumnChanging(value);
					this.SendPropertyChanging();
					this._HasCollarIdColumn = value;
					this.SendPropertyChanged("HasCollarIdColumn");
					this.OnHasCollarIdColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarFiles_LookupCollarFileFormats", Storage="_CollarFiles", ThisKey="Code", OtherKey="Format", DeleteRule="NO ACTION")]
		public EntitySet<CollarFile> CollarFiles
		{
			get
			{
				return this._CollarFiles;
			}
			set
			{
				this._CollarFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_LookupCollarFileFormats_LookupCollarManufacturer", Storage="_LookupCollarManufacturer", ThisKey="CollarManufacturer", OtherKey="CollarManufacturer", IsForeignKey=true)]
		public LookupCollarManufacturer LookupCollarManufacturer
		{
			get
			{
				return this._LookupCollarManufacturer.Entity;
			}
			set
			{
				LookupCollarManufacturer previousValue = this._LookupCollarManufacturer.Entity;
				if (((previousValue != value) 
							|| (this._LookupCollarManufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LookupCollarManufacturer.Entity = null;
						previousValue.LookupCollarFileFormats.Remove(this);
					}
					this._LookupCollarManufacturer.Entity = value;
					if ((value != null))
					{
						value.LookupCollarFileFormats.Add(this);
						this._CollarManufacturer = value.CollarManufacturer;
					}
					else
					{
						this._CollarManufacturer = default(string);
					}
					this.SendPropertyChanged("LookupCollarManufacturer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CollarFiles(CollarFile entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarFileFormat = this;
		}
		
		private void detach_CollarFiles(CollarFile entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarFileFormat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LookupCollarFileStatus")]
	public partial class LookupCollarFileStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<CollarFile> _CollarFiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public LookupCollarFileStatus()
		{
			this._CollarFiles = new EntitySet<CollarFile>(new Action<CollarFile>(this.attach_CollarFiles), new Action<CollarFile>(this.detach_CollarFiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(1) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarFiles_LookupCollarFileStatus", Storage="_CollarFiles", ThisKey="Code", OtherKey="Status", DeleteRule="NO ACTION")]
		public EntitySet<CollarFile> CollarFiles
		{
			get
			{
				return this._CollarFiles;
			}
			set
			{
				this._CollarFiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CollarFiles(CollarFile entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarFileStatus = this;
		}
		
		private void detach_CollarFiles(CollarFile entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarFileStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LookupCollarManufacturers")]
	public partial class LookupCollarManufacturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CollarManufacturer;
		
		private string _Name;
		
		private string _Website;
		
		private string _Description;
		
		private EntitySet<CollarFile> _CollarFiles;
		
		private EntitySet<Collar> _Collars;
		
		private EntitySet<LookupCollarFileFormat> _LookupCollarFileFormats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCollarManufacturerChanging(string value);
    partial void OnCollarManufacturerChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public LookupCollarManufacturer()
		{
			this._CollarFiles = new EntitySet<CollarFile>(new Action<CollarFile>(this.attach_CollarFiles), new Action<CollarFile>(this.detach_CollarFiles));
			this._Collars = new EntitySet<Collar>(new Action<Collar>(this.attach_Collars), new Action<Collar>(this.detach_Collars));
			this._LookupCollarFileFormats = new EntitySet<LookupCollarFileFormat>(new Action<LookupCollarFileFormat>(this.attach_LookupCollarFileFormats), new Action<LookupCollarFileFormat>(this.detach_LookupCollarFileFormats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarManufacturer", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CollarManufacturer
		{
			get
			{
				return this._CollarManufacturer;
			}
			set
			{
				if ((this._CollarManufacturer != value))
				{
					this.OnCollarManufacturerChanging(value);
					this.SendPropertyChanging();
					this._CollarManufacturer = value;
					this.SendPropertyChanged("CollarManufacturer");
					this.OnCollarManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(200)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarFiles_LookupCollarManufacturers", Storage="_CollarFiles", ThisKey="CollarManufacturer", OtherKey="CollarManufacturer", DeleteRule="NO ACTION")]
		public EntitySet<CollarFile> CollarFiles
		{
			get
			{
				return this._CollarFiles;
			}
			set
			{
				this._CollarFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Collars_LookupCollarManufacturers", Storage="_Collars", ThisKey="CollarManufacturer", OtherKey="CollarManufacturer", DeleteRule="NO ACTION")]
		public EntitySet<Collar> Collars
		{
			get
			{
				return this._Collars;
			}
			set
			{
				this._Collars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_LookupCollarFileFormats_LookupCollarManufacturer", Storage="_LookupCollarFileFormats", ThisKey="CollarManufacturer", OtherKey="CollarManufacturer", DeleteRule="NO ACTION")]
		public EntitySet<LookupCollarFileFormat> LookupCollarFileFormats
		{
			get
			{
				return this._LookupCollarFileFormats;
			}
			set
			{
				this._LookupCollarFileFormats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CollarFiles(CollarFile entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarManufacturer = this;
		}
		
		private void detach_CollarFiles(CollarFile entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarManufacturer = null;
		}
		
		private void attach_Collars(Collar entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarManufacturer = this;
		}
		
		private void detach_Collars(Collar entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarManufacturer = null;
		}
		
		private void attach_LookupCollarFileFormats(LookupCollarFileFormat entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarManufacturer = this;
		}
		
		private void detach_LookupCollarFileFormats(LookupCollarFileFormat entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarManufacturer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LookupCollarModels")]
	public partial class LookupCollarModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CollarModel;
		
		private EntitySet<Collar> _Collars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCollarModelChanging(string value);
    partial void OnCollarModelChanged();
    #endregion
		
		public LookupCollarModel()
		{
			this._Collars = new EntitySet<Collar>(new Action<Collar>(this.attach_Collars), new Action<Collar>(this.detach_Collars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarModel", DbType="VarChar(24) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CollarModel
		{
			get
			{
				return this._CollarModel;
			}
			set
			{
				if ((this._CollarModel != value))
				{
					this.OnCollarModelChanging(value);
					this.SendPropertyChanging();
					this._CollarModel = value;
					this.SendPropertyChanged("CollarModel");
					this.OnCollarModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Collars_LookupCollarModels", Storage="_Collars", ThisKey="CollarModel", OtherKey="CollarModel", DeleteRule="NO ACTION")]
		public EntitySet<Collar> Collars
		{
			get
			{
				return this._Collars;
			}
			set
			{
				this._Collars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Collars(Collar entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarModel = this;
		}
		
		private void detach_Collars(Collar entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarModel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LookupGender")]
	public partial class LookupGender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Sex;
		
		private EntitySet<Animal> _Animals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    #endregion
		
		public LookupGender()
		{
			this._Animals = new EntitySet<Animal>(new Action<Animal>(this.attach_Animals), new Action<Animal>(this.detach_Animals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Char(1) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Animals_Gender", Storage="_Animals", ThisKey="Sex", OtherKey="Gender", DeleteRule="NO ACTION")]
		public EntitySet<Animal> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				this._Animals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.LookupGender = this;
		}
		
		private void detach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.LookupGender = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LookupSpecies")]
	public partial class LookupSpecy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Species;
		
		private EntitySet<Animal> _Animals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpeciesChanging(string value);
    partial void OnSpeciesChanged();
    #endregion
		
		public LookupSpecy()
		{
			this._Animals = new EntitySet<Animal>(new Action<Animal>(this.attach_Animals), new Action<Animal>(this.detach_Animals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Species", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Species
		{
			get
			{
				return this._Species;
			}
			set
			{
				if ((this._Species != value))
				{
					this.OnSpeciesChanging(value);
					this.SendPropertyChanging();
					this._Species = value;
					this.SendPropertyChanged("Species");
					this.OnSpeciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Animals_Species", Storage="_Animals", ThisKey="Species", OtherKey="Species", DeleteRule="NO ACTION")]
		public EntitySet<Animal> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				this._Animals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.LookupSpecy = this;
		}
		
		private void detach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.LookupSpecy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Movements")]
	public partial class Movement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectId;
		
		private string _AnimalId;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private double _Duration;
		
		private double _Distance;
		
		private double _Speed;
		
		private EntityRef<Animal> _Animal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnAnimalIdChanging(string value);
    partial void OnAnimalIdChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnDurationChanging(double value);
    partial void OnDurationChanged();
    partial void OnDistanceChanging(double value);
    partial void OnDistanceChanged();
    partial void OnSpeedChanging(double value);
    partial void OnSpeedChanged();
    #endregion
		
		public Movement()
		{
			this._Animal = default(EntityRef<Animal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AnimalId
		{
			get
			{
				return this._AnimalId;
			}
			set
			{
				if ((this._AnimalId != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnimalIdChanging(value);
					this.SendPropertyChanging();
					this._AnimalId = value;
					this.SendPropertyChanged("AnimalId");
					this.OnAnimalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime2(7) NOT NULL", IsPrimaryKey=true)]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime2(7) NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Float NOT NULL")]
		public double Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance", DbType="Float NOT NULL")]
		public double Distance
		{
			get
			{
				return this._Distance;
			}
			set
			{
				if ((this._Distance != value))
				{
					this.OnDistanceChanging(value);
					this.SendPropertyChanging();
					this._Distance = value;
					this.SendPropertyChanged("Distance");
					this.OnDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speed", DbType="Float NOT NULL")]
		public double Speed
		{
			get
			{
				return this._Speed;
			}
			set
			{
				if ((this._Speed != value))
				{
					this.OnSpeedChanging(value);
					this.SendPropertyChanging();
					this._Speed = value;
					this.SendPropertyChanged("Speed");
					this.OnSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Movements_Animals", Storage="_Animal", ThisKey="ProjectId,AnimalId", OtherKey="ProjectId,AnimalId", IsForeignKey=true)]
		public Animal Animal
		{
			get
			{
				return this._Animal.Entity;
			}
			set
			{
				Animal previousValue = this._Animal.Entity;
				if (((previousValue != value) 
							|| (this._Animal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Animal.Entity = null;
						previousValue.Movements.Remove(this);
					}
					this._Animal.Entity = value;
					if ((value != null))
					{
						value.Movements.Add(this);
						this._ProjectId = value.ProjectId;
						this._AnimalId = value.AnimalId;
					}
					else
					{
						this._ProjectId = default(string);
						this._AnimalId = default(string);
					}
					this.SendPropertyChanged("Animal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectEditors")]
	public partial class ProjectEditor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectId;
		
		private string _Editor;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    #endregion
		
		public ProjectEditor()
		{
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProjectEditors_Projects", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true, DeleteOnNull=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectEditors.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectEditors.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectInvestigators")]
	public partial class ProjectInvestigator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Login;
		
		private string _Name;
		
		private string _Email;
		
		private string _Phone;
		
		private EntitySet<Collar> _Collars;
		
		private EntitySet<Project> _Projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public ProjectInvestigator()
		{
			this._Collars = new EntitySet<Collar>(new Action<Collar>(this.attach_Collars), new Action<Collar>(this.detach_Collars));
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Collars_Managers", Storage="_Collars", ThisKey="Login", OtherKey="Manager", DeleteRule="NO ACTION")]
		public EntitySet<Collar> Collars
		{
			get
			{
				return this._Collars;
			}
			set
			{
				this._Collars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Projects_ProjectInvestigators", Storage="_Projects", ThisKey="Login", OtherKey="ProjectInvestigator", DeleteRule="NO ACTION")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Collars(Collar entity)
		{
			this.SendPropertyChanging();
			entity.ProjectInvestigator = this;
		}
		
		private void detach_Collars(Collar entity)
		{
			this.SendPropertyChanging();
			entity.ProjectInvestigator = null;
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.ProjectInvestigatorProjectInvestigator = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.ProjectInvestigatorProjectInvestigator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projects")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectId;
		
		private string _ProjectName;
		
		private string _ProjectInvestigator;
		
		private string _UnitCode;
		
		private string _Description;
		
		private EntitySet<Animal> _Animals;
		
		private EntitySet<CollarFile> _CollarFiles;
		
		private EntitySet<ProjectEditor> _ProjectEditors;
		
		private EntityRef<ProjectInvestigator> _ProjectInvestigatorProjectInvestigator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnProjectInvestigatorChanging(string value);
    partial void OnProjectInvestigatorChanged();
    partial void OnUnitCodeChanging(string value);
    partial void OnUnitCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Project()
		{
			this._Animals = new EntitySet<Animal>(new Action<Animal>(this.attach_Animals), new Action<Animal>(this.detach_Animals));
			this._CollarFiles = new EntitySet<CollarFile>(new Action<CollarFile>(this.attach_CollarFiles), new Action<CollarFile>(this.detach_CollarFiles));
			this._ProjectEditors = new EntitySet<ProjectEditor>(new Action<ProjectEditor>(this.attach_ProjectEditors), new Action<ProjectEditor>(this.detach_ProjectEditors));
			this._ProjectInvestigatorProjectInvestigator = default(EntityRef<ProjectInvestigator>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectInvestigator", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string ProjectInvestigator
		{
			get
			{
				return this._ProjectInvestigator;
			}
			set
			{
				if ((this._ProjectInvestigator != value))
				{
					if (this._ProjectInvestigatorProjectInvestigator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectInvestigatorChanging(value);
					this.SendPropertyChanging();
					this._ProjectInvestigator = value;
					this.SendPropertyChanged("ProjectInvestigator");
					this.OnProjectInvestigatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="Char(4)")]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this.OnUnitCodeChanging(value);
					this.SendPropertyChanging();
					this._UnitCode = value;
					this.SendPropertyChanged("UnitCode");
					this.OnUnitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Animals_Projects", Storage="_Animals", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Animal> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				this._Animals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CollarFiles_Projects", Storage="_CollarFiles", ThisKey="ProjectId", OtherKey="Project", DeleteRule="NO ACTION")]
		public EntitySet<CollarFile> CollarFiles
		{
			get
			{
				return this._CollarFiles;
			}
			set
			{
				this._CollarFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProjectEditors_Projects", Storage="_ProjectEditors", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="CASCADE")]
		public EntitySet<ProjectEditor> ProjectEditors
		{
			get
			{
				return this._ProjectEditors;
			}
			set
			{
				this._ProjectEditors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Projects_ProjectInvestigators", Storage="_ProjectInvestigatorProjectInvestigator", ThisKey="ProjectInvestigator", OtherKey="Login", IsForeignKey=true)]
		public ProjectInvestigator ProjectInvestigatorProjectInvestigator
		{
			get
			{
				return this._ProjectInvestigatorProjectInvestigator.Entity;
			}
			set
			{
				ProjectInvestigator previousValue = this._ProjectInvestigatorProjectInvestigator.Entity;
				if (((previousValue != value) 
							|| (this._ProjectInvestigatorProjectInvestigator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectInvestigatorProjectInvestigator.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._ProjectInvestigatorProjectInvestigator.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._ProjectInvestigator = value.Login;
					}
					else
					{
						this._ProjectInvestigator = default(string);
					}
					this.SendPropertyChanged("ProjectInvestigatorProjectInvestigator");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_CollarFiles(CollarFile entity)
		{
			this.SendPropertyChanging();
			entity.ProjectProject = this;
		}
		
		private void detach_CollarFiles(CollarFile entity)
		{
			this.SendPropertyChanging();
			entity.ProjectProject = null;
		}
		
		private void attach_ProjectEditors(ProjectEditor entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectEditors(ProjectEditor entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private string _Key;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Key", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(500)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
