#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Animal_Movement")]
	public partial class AnimalMovementDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLookupCollarFileFormat(LookupCollarFileFormat instance);
    partial void UpdateLookupCollarFileFormat(LookupCollarFileFormat instance);
    partial void DeleteLookupCollarFileFormat(LookupCollarFileFormat instance);
    partial void InsertLookupCollarFileStatus(LookupCollarFileStatus instance);
    partial void UpdateLookupCollarFileStatus(LookupCollarFileStatus instance);
    partial void DeleteLookupCollarFileStatus(LookupCollarFileStatus instance);
    partial void InsertLookupCollarManufacturer(LookupCollarManufacturer instance);
    partial void UpdateLookupCollarManufacturer(LookupCollarManufacturer instance);
    partial void DeleteLookupCollarManufacturer(LookupCollarManufacturer instance);
    partial void InsertLookupCollarModel(LookupCollarModel instance);
    partial void UpdateLookupCollarModel(LookupCollarModel instance);
    partial void DeleteLookupCollarModel(LookupCollarModel instance);
    partial void InsertLookupGender(LookupGender instance);
    partial void UpdateLookupGender(LookupGender instance);
    partial void DeleteLookupGender(LookupGender instance);
    partial void InsertLookupSpecies(LookupSpecies instance);
    partial void UpdateLookupSpecies(LookupSpecies instance);
    partial void DeleteLookupSpecies(LookupSpecies instance);
    partial void UpdateProjectEditor(ProjectEditor instance);
    partial void InsertProjectInvestigator(ProjectInvestigator instance);
    partial void DeleteProjectInvestigator(ProjectInvestigator instance);
    partial void InsertCollarFix(CollarFix instance);
    partial void UpdateCollarFix(CollarFix instance);
    partial void DeleteCollarFix(CollarFix instance);
    #endregion
		
		public AnimalMovementDataContext() : 
				base(global::DataModel.Properties.Settings.Default.Animal_MovementConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AnimalMovementDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnimalMovementDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnimalMovementDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnimalMovementDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Animal> Animals
		{
			get
			{
				return this.GetTable<Animal>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<CollarFile> CollarFiles
		{
			get
			{
				return this.GetTable<CollarFile>();
			}
		}
		
		public System.Data.Linq.Table<CollarDeployment> CollarDeployments
		{
			get
			{
				return this.GetTable<CollarDeployment>();
			}
		}
		
		public System.Data.Linq.Table<Collar> Collars
		{
			get
			{
				return this.GetTable<Collar>();
			}
		}
		
		public System.Data.Linq.Table<LookupCollarFileFormat> LookupCollarFileFormats
		{
			get
			{
				return this.GetTable<LookupCollarFileFormat>();
			}
		}
		
		public System.Data.Linq.Table<LookupCollarFileStatus> LookupCollarFileStatus
		{
			get
			{
				return this.GetTable<LookupCollarFileStatus>();
			}
		}
		
		public System.Data.Linq.Table<LookupCollarManufacturer> LookupCollarManufacturers
		{
			get
			{
				return this.GetTable<LookupCollarManufacturer>();
			}
		}
		
		public System.Data.Linq.Table<LookupCollarModel> LookupCollarModels
		{
			get
			{
				return this.GetTable<LookupCollarModel>();
			}
		}
		
		public System.Data.Linq.Table<LookupGender> LookupGenders
		{
			get
			{
				return this.GetTable<LookupGender>();
			}
		}
		
		public System.Data.Linq.Table<LookupSpecies> LookupSpecies
		{
			get
			{
				return this.GetTable<LookupSpecies>();
			}
		}
		
		public System.Data.Linq.Table<ProjectEditor> ProjectEditors
		{
			get
			{
				return this.GetTable<ProjectEditor>();
			}
		}
		
		public System.Data.Linq.Table<ProjectInvestigator> ProjectInvestigators
		{
			get
			{
				return this.GetTable<ProjectInvestigator>();
			}
		}
		
		public System.Data.Linq.Table<CollarFix> CollarFixes
		{
			get
			{
				return this.GetTable<CollarFix>();
			}
		}
		
		private void InsertAnimal(Animal obj)
		{
			this.Animal_Insert(obj.ProjectId, obj.AnimalId, obj.Species, ((System.Nullable<char>)(obj.Gender)), ((System.Nullable<System.DateTime>)(obj.MortalityDate)), obj.GroupName, obj.Description);
		}
		
		private void UpdateAnimal(Animal obj)
		{
			Animal original = ((Animal)(Animals.GetOriginalEntityState(obj)));
			this.Animal_Update(original.ProjectId, original.AnimalId, obj.Species, ((System.Nullable<char>)(obj.Gender)), ((System.Nullable<System.DateTime>)(obj.MortalityDate)), obj.GroupName, obj.Description);
		}
		
		private void DeleteAnimal(Animal obj)
		{
			Animal original = ((Animal)(Animals.GetOriginalEntityState(obj)));
			this.Animal_Delete(original.ProjectId, original.AnimalId);
		}
		
		private void InsertProject(Project obj)
		{
			this.Project_Insert(obj.ProjectId, obj.ProjectName, obj.ProjectInvestigator, obj.UnitCode, obj.Description);
		}
		
		private void UpdateProject(Project obj)
		{
			Project original = ((Project)(Projects.GetOriginalEntityState(obj)));
			this.Project_Update(original.ProjectId, obj.ProjectName, obj.UnitCode, obj.ProjectInvestigator, obj.Description);
		}
		
		private void DeleteProject(Project obj)
		{
			Project original = ((Project)(Projects.GetOriginalEntityState(obj)));
			this.Project_Delete(original.ProjectId);
		}
		
		private void InsertCollarFile(CollarFile obj)
		{
			System.Nullable<int> p1 = obj.FileId;
			this.CollarFile_Insert(obj.FileName, obj.Project, obj.CollarManufacturer, obj.CollarId, ((System.Nullable<char>)(obj.Format)), ((System.Nullable<char>)(obj.Status)), obj.Contents, ref p1);
			obj.FileId = p1.GetValueOrDefault();
		}
		
		private void UpdateCollarFile(CollarFile obj)
		{
			CollarFile original = ((CollarFile)(CollarFiles.GetOriginalEntityState(obj)));
			this.CollarFile_Update(((System.Nullable<int>)(original.FileId)), obj.FileName, obj.CollarId);
		}
		
		private void DeleteCollarFile(CollarFile obj)
		{
			CollarFile original = ((CollarFile)(CollarFiles.GetOriginalEntityState(obj)));
			this.CollarFile_Delete(((System.Nullable<int>)(original.FileId)));
		}
		
		private void InsertCollarDeployment(CollarDeployment obj)
		{
			this.CollarDeployment_Insert(obj.ProjectId, obj.AnimalId, obj.CollarManufacturer, obj.CollarId, ((System.Nullable<System.DateTime>)(obj.DeploymentDate)), ((System.Nullable<System.DateTime>)(obj.RetrievalDate)));
		}
		
		private void UpdateCollarDeployment(CollarDeployment obj)
		{
			this.CollarDeployment_UpdateRetrievalDate(obj.ProjectId, obj.AnimalId, obj.CollarManufacturer, obj.CollarId, ((System.Nullable<System.DateTime>)(obj.DeploymentDate)), ((System.Nullable<System.DateTime>)(obj.RetrievalDate)));
		}
		
		private void DeleteCollarDeployment(CollarDeployment obj)
		{
			this.CollarDeployment_Delete(obj.ProjectId, obj.AnimalId, obj.CollarManufacturer, obj.CollarId, ((System.Nullable<System.DateTime>)(obj.DeploymentDate)));
		}
		
		private void InsertCollar(Collar obj)
		{
			this.Collar_Insert(obj.CollarManufacturer, obj.CollarId, obj.CollarModel, obj.Owner, obj.AlternativeId, obj.SerialNumber, ((System.Nullable<double>)(obj.Frequency)), obj.DownloadInfo, obj.Notes);
		}
		
		private void UpdateCollar(Collar obj)
		{
			Collar original = ((Collar)(Collars.GetOriginalEntityState(obj)));
			this.Collar_Update(original.CollarManufacturer, original.CollarId, obj.CollarModel, obj.Manager, obj.Owner, obj.AlternativeId, obj.SerialNumber, ((System.Nullable<double>)(obj.Frequency)), obj.DownloadInfo, obj.Notes);
		}
		
		private void DeleteCollar(Collar obj)
		{
			Collar original = ((Collar)(Collars.GetOriginalEntityState(obj)));
			this.Collar_Delete(original.CollarManufacturer, original.CollarId);
		}
		
		private void InsertProjectEditor(ProjectEditor obj)
		{
			this.Editor_Insert(obj.ProjectId, obj.Editor);
		}
		
		private void DeleteProjectEditor(ProjectEditor obj)
		{
			this.Editor_Delete(obj.ProjectId, obj.Editor);
		}
		
		private void UpdateProjectInvestigator(ProjectInvestigator obj)
		{
			ProjectInvestigator original = ((ProjectInvestigator)(ProjectInvestigators.GetOriginalEntityState(obj)));
			this.ProjectInvestigator_Update(original.Login, obj.Name, obj.Email, obj.Phone);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Animal_Delete")]
		public int Animal_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectId", DbType="NVarChar(255)")] string projectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnimalId", DbType="NVarChar(255)")] string animalId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectId, animalId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Collar_Delete")]
		public int Collar_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollarManufacturer", DbType="NVarChar(255)")] string collarManufacturer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollarId", DbType="NVarChar(255)")] string collarId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), collarManufacturer, collarId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Collar_Insert")]
		public int Collar_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollarManufacturer", DbType="NVarChar(255)")] string collarManufacturer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollarId", DbType="NVarChar(255)")] string collarId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollarModel", DbType="NVarChar(255)")] string collarModel, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Owner", DbType="NVarChar(255)")] string owner, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AlternativeId", DbType="NVarChar(255)")] string alternativeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SerialNumber", DbType="NVarChar(255)")] string serialNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Frequency", DbType="Float")] System.Nullable<double> frequency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DownloadInfo", DbType="NVarChar(255)")] string downloadInfo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Notes", DbType="NVarChar(MAX)")] string notes)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), collarManufacturer, collarId, collarModel, owner, alternativeId, serialNumber, frequency, downloadInfo, notes);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Collar_Update")]
		public int Collar_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollarManufacturer", DbType="NVarChar(255)")] string collarManufacturer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollarId", DbType="NVarChar(255)")] string collarId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollarModel", DbType="NVarChar(255)")] string collarModel, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Manager", DbType="NVarChar(128)")] string manager, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Owner", DbType="NVarChar(255)")] string owner, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AlternativeId", DbType="NVarChar(255)")] string alternativeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SerialNumber", DbType="NVarChar(255)")] string serialNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Frequency", DbType="Float")] System.Nullable<double> frequency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DownloadInfo", DbType="NVarChar(255)")] string downloadInfo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Notes", DbType="NVarChar(MAX)")] string notes)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), collarManufacturer, collarId, collarModel, manager, owner, alternativeId, serialNumber, frequency, downloadInfo, notes);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CollarDeployment_Delete")]
		public int CollarDeployment_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectId", DbType="NVarChar(255)")] string projectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnimalId", DbType="NVarChar(255)")] string animalId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollarManufacturer", DbType="NVarChar(255)")] string collarManufacturer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollarId", DbType="NVarChar(255)")] string collarId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeploymentDate", DbType="DateTime2")] System.Nullable<System.DateTime> deploymentDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectId, animalId, collarManufacturer, collarId, deploymentDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CollarDeployment_Insert")]
		public int CollarDeployment_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectId", DbType="NVarChar(255)")] string projectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnimalId", DbType="NVarChar(255)")] string animalId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollarManufacturer", DbType="NVarChar(255)")] string collarManufacturer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollarId", DbType="NVarChar(255)")] string collarId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeploymentDate", DbType="DateTime2")] System.Nullable<System.DateTime> deploymentDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RetrievalDate", DbType="DateTime2")] System.Nullable<System.DateTime> retrievalDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectId, animalId, collarManufacturer, collarId, deploymentDate, retrievalDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CollarDeployment_UpdateRetrievalDate")]
		public int CollarDeployment_UpdateRetrievalDate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectId", DbType="NVarChar(255)")] string projectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnimalId", DbType="NVarChar(255)")] string animalId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollarManufacturer", DbType="NVarChar(255)")] string collarManufacturer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollarId", DbType="NVarChar(255)")] string collarId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeploymentDate", DbType="DateTime2")] System.Nullable<System.DateTime> deploymentDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RetrievalDate", DbType="DateTime2")] System.Nullable<System.DateTime> retrievalDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectId, animalId, collarManufacturer, collarId, deploymentDate, retrievalDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CollarFile_Insert")]
		public int CollarFile_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FileName", DbType="NVarChar(255)")] string fileName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectId", DbType="NVarChar(255)")] string projectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollarManufacturer", DbType="NVarChar(255)")] string collarManufacturer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollarId", DbType="NVarChar(255)")] string collarId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Format", DbType="Char(1)")] System.Nullable<char> format, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Char(1)")] System.Nullable<char> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Contents", DbType="VarBinary(MAX)")] System.Data.Linq.Binary contents, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FileId", DbType="Int")] ref System.Nullable<int> fileId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fileName, projectId, collarManufacturer, collarId, format, status, contents, fileId);
			fileId = ((System.Nullable<int>)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Settings_Update")]
		public int Settings_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Key", DbType="NVarChar(30)")] string key, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Value", DbType="NVarChar(500)")] string value)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), key, value);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Editor_Delete")]
		public int Editor_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectId", DbType="NVarChar(255)")] string projectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Editor", DbType="NVarChar(128)")] string editor)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectId, editor);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Editor_Insert")]
		public int Editor_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectId", DbType="NVarChar(255)")] string projectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Editor", DbType="NVarChar(128)")] string editor)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectId, editor);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Location_UpdateStatus")]
		public int Location_UpdateStatus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectId", DbType="NVarChar(255)")] string projectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnimalId", DbType="NVarChar(255)")] string animalId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FixDate", DbType="DateTime2")] System.Nullable<System.DateTime> fixDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Char(1)")] System.Nullable<char> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectId, animalId, fixDate, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Project_Delete")]
		public int Project_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectId", DbType="NVarChar(255)")] string projectId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Project_Insert")]
		public int Project_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectId", DbType="NVarChar(255)")] string projectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectName", DbType="NVarChar(255)")] string projectName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectInvestigator", DbType="NVarChar(128)")] string projectInvestigator, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnitCode", DbType="NVarChar(255)")] string unitCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(4000)")] string description)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectId, projectName, projectInvestigator, unitCode, description);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Project_Update")]
		public int Project_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectId", DbType="NVarChar(255)")] string projectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectName", DbType="NVarChar(255)")] string projectName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnitCode", DbType="NVarChar(255)")] string unitCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectInvestigator", DbType="NVarChar(255)")] string projectInvestigator, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(4000)")] string description)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectId, projectName, unitCode, projectInvestigator, description);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.NextAnimalId", IsComposable=true)]
		public string NextAnimalId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectId", DbType="VarChar(32)")] string projectId)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IsEditor", IsComposable=true)]
		public System.Nullable<bool> IsEditor([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Project", DbType="VarChar(32)")] string project, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="User", DbType="NVarChar(128)")] string user)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), project, user).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CollarFile_UpdateStatus")]
		public int CollarFile_UpdateStatus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FileId", DbType="Int")] System.Nullable<int> fileId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Char(1)")] System.Nullable<char> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fileId, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CollarFile_Delete")]
		public int CollarFile_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FileId", DbType="Int")] System.Nullable<int> fileId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fileId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CollarFixes_UpdateUnhideFix")]
		public int CollarFixes_UpdateUnhideFix([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FixId", DbType="BigInt")] System.Nullable<long> fixId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fixId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProjectInvestigator_Update")]
		public int ProjectInvestigator_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Login", DbType="NVarChar(128)")] string login, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(255)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(255)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone", DbType="NVarChar(255)")] string phone)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), login, name, email, phone);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CollarFile_Update")]
		public int CollarFile_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FileId", DbType="Int")] System.Nullable<int> fileId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FileName", DbType="NVarChar(255)")] string fileName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollarId", DbType="NVarChar(255)")] string collarId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fileId, fileName, collarId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Animal_Insert")]
		public int Animal_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectId", DbType="NVarChar(255)")] string projectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnimalId", DbType="NVarChar(255)")] string animalId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Species", DbType="NVarChar(255)")] string species, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Gender", DbType="NChar(1)")] System.Nullable<char> gender, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MortalityDate", DbType="DateTime2")] System.Nullable<System.DateTime> mortalityDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupName", DbType="NVarChar(255)")] string groupName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(4000)")] string description)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectId, animalId, species, gender, mortalityDate, groupName, description);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Animal_Update")]
		public int Animal_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectId", DbType="NVarChar(255)")] string projectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnimalId", DbType="NVarChar(255)")] string animalId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Species", DbType="NVarChar(255)")] string species, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Gender", DbType="NChar(1)")] System.Nullable<char> gender, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MortalityDate", DbType="DateTime2")] System.Nullable<System.DateTime> mortalityDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupName", DbType="NVarChar(255)")] string groupName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(4000)")] string description)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectId, animalId, species, gender, mortalityDate, groupName, description);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Animals")]
	public partial class Animal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectId;
		
		private string _AnimalId;
		
		private string _Species;
		
		private System.Nullable<char> _Gender;
		
		private string _GroupName;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _MortalityDate;
		
		private EntitySet<CollarDeployment> _CollarDeployments;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<LookupGender> _LookupGender;
		
		private EntityRef<LookupSpecies> _LookupSpecies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnAnimalIdChanging(string value);
    partial void OnAnimalIdChanged();
    partial void OnSpeciesChanging(string value);
    partial void OnSpeciesChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMortalityDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMortalityDateChanged();
    #endregion
		
		public Animal()
		{
			this._CollarDeployments = new EntitySet<CollarDeployment>(new Action<CollarDeployment>(this.attach_CollarDeployments), new Action<CollarDeployment>(this.detach_CollarDeployments));
			this._Project = default(EntityRef<Project>);
			this._LookupGender = default(EntityRef<LookupGender>);
			this._LookupSpecies = default(EntityRef<LookupSpecies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AnimalId
		{
			get
			{
				return this._AnimalId;
			}
			set
			{
				if ((this._AnimalId != value))
				{
					this.OnAnimalIdChanging(value);
					this.SendPropertyChanging();
					this._AnimalId = value;
					this.SendPropertyChanged("AnimalId");
					this.OnAnimalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Species", DbType="VarChar(32)")]
		public string Species
		{
			get
			{
				return this._Species;
			}
			set
			{
				if ((this._Species != value))
				{
					if (this._LookupSpecies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpeciesChanging(value);
					this.SendPropertyChanging();
					this._Species = value;
					this.SendPropertyChanged("Species");
					this.OnSpeciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					if (this._LookupGender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(500)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortalityDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> MortalityDate
		{
			get
			{
				return this._MortalityDate;
			}
			set
			{
				if ((this._MortalityDate != value))
				{
					this.OnMortalityDateChanging(value);
					this.SendPropertyChanging();
					this._MortalityDate = value;
					this.SendPropertyChanged("MortalityDate");
					this.OnMortalityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_CollarDeployment", Storage="_CollarDeployments", ThisKey="ProjectId,AnimalId", OtherKey="ProjectId,AnimalId")]
		public EntitySet<CollarDeployment> CollarDeployments
		{
			get
			{
				return this._CollarDeployments;
			}
			set
			{
				this._CollarDeployments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Animal", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Animals.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Animals.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LookupGender_Animal", Storage="_LookupGender", ThisKey="Gender", OtherKey="Sex", IsForeignKey=true)]
		public LookupGender LookupGender
		{
			get
			{
				return this._LookupGender.Entity;
			}
			set
			{
				LookupGender previousValue = this._LookupGender.Entity;
				if (((previousValue != value) 
							|| (this._LookupGender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LookupGender.Entity = null;
						previousValue.Animals.Remove(this);
					}
					this._LookupGender.Entity = value;
					if ((value != null))
					{
						value.Animals.Add(this);
						this._Gender = value.Sex;
					}
					else
					{
						this._Gender = default(Nullable<char>);
					}
					this.SendPropertyChanged("LookupGender");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LookupSpecies_Animal", Storage="_LookupSpecies", ThisKey="Species", OtherKey="Species", IsForeignKey=true)]
		public LookupSpecies LookupSpecies
		{
			get
			{
				return this._LookupSpecies.Entity;
			}
			set
			{
				LookupSpecies previousValue = this._LookupSpecies.Entity;
				if (((previousValue != value) 
							|| (this._LookupSpecies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LookupSpecies.Entity = null;
						previousValue.Animals.Remove(this);
					}
					this._LookupSpecies.Entity = value;
					if ((value != null))
					{
						value.Animals.Add(this);
						this._Species = value.Species;
					}
					else
					{
						this._Species = default(string);
					}
					this.SendPropertyChanged("LookupSpecies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CollarDeployments(CollarDeployment entity)
		{
			this.SendPropertyChanging();
			entity.Animal = this;
		}
		
		private void detach_CollarDeployments(CollarDeployment entity)
		{
			this.SendPropertyChanging();
			entity.Animal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projects")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectId;
		
		private string _ProjectName;
		
		private string _ProjectInvestigator;
		
		private string _UnitCode;
		
		private string _Description;
		
		private EntitySet<Animal> _Animals;
		
		private EntitySet<CollarFile> _CollarFiles;
		
		private EntitySet<ProjectEditor> _ProjectEditors;
		
		private EntityRef<ProjectInvestigator> _ProjectInvestigator1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnProjectInvestigatorChanging(string value);
    partial void OnProjectInvestigatorChanged();
    partial void OnUnitCodeChanging(string value);
    partial void OnUnitCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Project()
		{
			this._Animals = new EntitySet<Animal>(new Action<Animal>(this.attach_Animals), new Action<Animal>(this.detach_Animals));
			this._CollarFiles = new EntitySet<CollarFile>(new Action<CollarFile>(this.attach_CollarFiles), new Action<CollarFile>(this.detach_CollarFiles));
			this._ProjectEditors = new EntitySet<ProjectEditor>(new Action<ProjectEditor>(this.attach_ProjectEditors), new Action<ProjectEditor>(this.detach_ProjectEditors));
			this._ProjectInvestigator1 = default(EntityRef<ProjectInvestigator>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectInvestigator", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string ProjectInvestigator
		{
			get
			{
				return this._ProjectInvestigator;
			}
			set
			{
				if ((this._ProjectInvestigator != value))
				{
					if (this._ProjectInvestigator1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectInvestigatorChanging(value);
					this.SendPropertyChanging();
					this._ProjectInvestigator = value;
					this.SendPropertyChanged("ProjectInvestigator");
					this.OnProjectInvestigatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="Char(4)")]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this.OnUnitCodeChanging(value);
					this.SendPropertyChanging();
					this._UnitCode = value;
					this.SendPropertyChanged("UnitCode");
					this.OnUnitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Animal", Storage="_Animals", ThisKey="ProjectId", OtherKey="ProjectId")]
		public EntitySet<Animal> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				this._Animals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_CollarFile", Storage="_CollarFiles", ThisKey="ProjectId", OtherKey="Project")]
		public EntitySet<CollarFile> CollarFiles
		{
			get
			{
				return this._CollarFiles;
			}
			set
			{
				this._CollarFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectEditor", Storage="_ProjectEditors", ThisKey="ProjectId", OtherKey="ProjectId")]
		public EntitySet<ProjectEditor> ProjectEditors
		{
			get
			{
				return this._ProjectEditors;
			}
			set
			{
				this._ProjectEditors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectInvestigator_Project", Storage="_ProjectInvestigator1", ThisKey="ProjectInvestigator", OtherKey="Login", IsForeignKey=true)]
		public ProjectInvestigator ProjectInvestigator1
		{
			get
			{
				return this._ProjectInvestigator1.Entity;
			}
			set
			{
				ProjectInvestigator previousValue = this._ProjectInvestigator1.Entity;
				if (((previousValue != value) 
							|| (this._ProjectInvestigator1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectInvestigator1.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._ProjectInvestigator1.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._ProjectInvestigator = value.Login;
					}
					else
					{
						this._ProjectInvestigator = default(string);
					}
					this.SendPropertyChanged("ProjectInvestigator1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_CollarFiles(CollarFile entity)
		{
			this.SendPropertyChanging();
			entity.Project1 = this;
		}
		
		private void detach_CollarFiles(CollarFile entity)
		{
			this.SendPropertyChanging();
			entity.Project1 = null;
		}
		
		private void attach_ProjectEditors(ProjectEditor entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectEditors(ProjectEditor entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CollarFiles")]
	public partial class CollarFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FileId;
		
		private string _FileName;
		
		private System.DateTime _UploadDate;
		
		private string _Project;
		
		private string _UserName;
		
		private string _CollarManufacturer;
		
		private string _CollarId;
		
		private char _Format;
		
		private char _Status;
		
		private System.Data.Linq.Link<System.Data.Linq.Binary> _Contents;
		
		private EntitySet<CollarFix> _CollarFixes;
		
		private EntityRef<Project> _Project1;
		
		private EntityRef<LookupCollarFileFormat> _LookupCollarFileFormat;
		
		private EntityRef<LookupCollarFileStatus> _LookupCollarFileStatus;
		
		private EntityRef<LookupCollarManufacturer> _LookupCollarManufacturer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIdChanging(int value);
    partial void OnFileIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnUploadDateChanging(System.DateTime value);
    partial void OnUploadDateChanged();
    partial void OnProjectChanging(string value);
    partial void OnProjectChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnCollarManufacturerChanging(string value);
    partial void OnCollarManufacturerChanged();
    partial void OnCollarIdChanging(string value);
    partial void OnCollarIdChanged();
    partial void OnFormatChanging(char value);
    partial void OnFormatChanged();
    partial void OnStatusChanging(char value);
    partial void OnStatusChanged();
    partial void OnContentsChanging(System.Data.Linq.Binary value);
    partial void OnContentsChanged();
    #endregion
		
		public CollarFile()
		{
			this._CollarFixes = new EntitySet<CollarFix>(new Action<CollarFix>(this.attach_CollarFixes), new Action<CollarFix>(this.detach_CollarFixes));
			this._Project1 = default(EntityRef<Project>);
			this._LookupCollarFileFormat = default(EntityRef<LookupCollarFileFormat>);
			this._LookupCollarFileStatus = default(EntityRef<LookupCollarFileStatus>);
			this._LookupCollarManufacturer = default(EntityRef<LookupCollarManufacturer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime UploadDate
		{
			get
			{
				return this._UploadDate;
			}
			set
			{
				if ((this._UploadDate != value))
				{
					this.OnUploadDateChanging(value);
					this.SendPropertyChanging();
					this._UploadDate = value;
					this.SendPropertyChanged("UploadDate");
					this.OnUploadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					if (this._Project1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectChanging(value);
					this.SendPropertyChanging();
					this._Project = value;
					this.SendPropertyChanged("Project");
					this.OnProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarManufacturer", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string CollarManufacturer
		{
			get
			{
				return this._CollarManufacturer;
			}
			set
			{
				if ((this._CollarManufacturer != value))
				{
					if (this._LookupCollarManufacturer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollarManufacturerChanging(value);
					this.SendPropertyChanging();
					this._CollarManufacturer = value;
					this.SendPropertyChanged("CollarManufacturer");
					this.OnCollarManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarId", DbType="VarChar(16)")]
		public string CollarId
		{
			get
			{
				return this._CollarId;
			}
			set
			{
				if ((this._CollarId != value))
				{
					this.OnCollarIdChanging(value);
					this.SendPropertyChanging();
					this._CollarId = value;
					this.SendPropertyChanged("CollarId");
					this.OnCollarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Format", DbType="Char(1) NOT NULL")]
		public char Format
		{
			get
			{
				return this._Format;
			}
			set
			{
				if ((this._Format != value))
				{
					if (this._LookupCollarFileFormat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormatChanging(value);
					this.SendPropertyChanging();
					this._Format = value;
					this.SendPropertyChanged("Format");
					this.OnFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1) NOT NULL")]
		public char Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._LookupCollarFileStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Contents
		{
			get
			{
				return this._Contents.Value;
			}
			set
			{
				if ((this._Contents.Value != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents.Value = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CollarFile_CollarFix", Storage="_CollarFixes", ThisKey="FileId", OtherKey="FileId")]
		public EntitySet<CollarFix> CollarFixes
		{
			get
			{
				return this._CollarFixes;
			}
			set
			{
				this._CollarFixes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_CollarFile", Storage="_Project1", ThisKey="Project", OtherKey="ProjectId", IsForeignKey=true)]
		public Project Project1
		{
			get
			{
				return this._Project1.Entity;
			}
			set
			{
				Project previousValue = this._Project1.Entity;
				if (((previousValue != value) 
							|| (this._Project1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project1.Entity = null;
						previousValue.CollarFiles.Remove(this);
					}
					this._Project1.Entity = value;
					if ((value != null))
					{
						value.CollarFiles.Add(this);
						this._Project = value.ProjectId;
					}
					else
					{
						this._Project = default(string);
					}
					this.SendPropertyChanged("Project1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LookupCollarFileFormat_CollarFile", Storage="_LookupCollarFileFormat", ThisKey="Format", OtherKey="Code", IsForeignKey=true)]
		public LookupCollarFileFormat LookupCollarFileFormat
		{
			get
			{
				return this._LookupCollarFileFormat.Entity;
			}
			set
			{
				LookupCollarFileFormat previousValue = this._LookupCollarFileFormat.Entity;
				if (((previousValue != value) 
							|| (this._LookupCollarFileFormat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LookupCollarFileFormat.Entity = null;
						previousValue.CollarFiles.Remove(this);
					}
					this._LookupCollarFileFormat.Entity = value;
					if ((value != null))
					{
						value.CollarFiles.Add(this);
						this._Format = value.Code;
					}
					else
					{
						this._Format = default(char);
					}
					this.SendPropertyChanged("LookupCollarFileFormat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LookupCollarFileStatus_CollarFile", Storage="_LookupCollarFileStatus", ThisKey="Status", OtherKey="Code", IsForeignKey=true)]
		public LookupCollarFileStatus LookupCollarFileStatus
		{
			get
			{
				return this._LookupCollarFileStatus.Entity;
			}
			set
			{
				LookupCollarFileStatus previousValue = this._LookupCollarFileStatus.Entity;
				if (((previousValue != value) 
							|| (this._LookupCollarFileStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LookupCollarFileStatus.Entity = null;
						previousValue.CollarFiles.Remove(this);
					}
					this._LookupCollarFileStatus.Entity = value;
					if ((value != null))
					{
						value.CollarFiles.Add(this);
						this._Status = value.Code;
					}
					else
					{
						this._Status = default(char);
					}
					this.SendPropertyChanged("LookupCollarFileStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LookupCollarManufacturer_CollarFile", Storage="_LookupCollarManufacturer", ThisKey="CollarManufacturer", OtherKey="CollarManufacturer", IsForeignKey=true)]
		public LookupCollarManufacturer LookupCollarManufacturer
		{
			get
			{
				return this._LookupCollarManufacturer.Entity;
			}
			set
			{
				LookupCollarManufacturer previousValue = this._LookupCollarManufacturer.Entity;
				if (((previousValue != value) 
							|| (this._LookupCollarManufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LookupCollarManufacturer.Entity = null;
						previousValue.CollarFiles.Remove(this);
					}
					this._LookupCollarManufacturer.Entity = value;
					if ((value != null))
					{
						value.CollarFiles.Add(this);
						this._CollarManufacturer = value.CollarManufacturer;
					}
					else
					{
						this._CollarManufacturer = default(string);
					}
					this.SendPropertyChanged("LookupCollarManufacturer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CollarFixes(CollarFix entity)
		{
			this.SendPropertyChanging();
			entity.CollarFile = this;
		}
		
		private void detach_CollarFixes(CollarFix entity)
		{
			this.SendPropertyChanging();
			entity.CollarFile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CollarDeployments")]
	public partial class CollarDeployment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectId;
		
		private string _AnimalId;
		
		private string _CollarManufacturer;
		
		private string _CollarId;
		
		private System.DateTime _DeploymentDate;
		
		private System.Nullable<System.DateTime> _RetrievalDate;
		
		private EntityRef<Animal> _Animal;
		
		private EntityRef<Collar> _Collar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnAnimalIdChanging(string value);
    partial void OnAnimalIdChanged();
    partial void OnCollarManufacturerChanging(string value);
    partial void OnCollarManufacturerChanged();
    partial void OnCollarIdChanging(string value);
    partial void OnCollarIdChanged();
    partial void OnDeploymentDateChanging(System.DateTime value);
    partial void OnDeploymentDateChanged();
    partial void OnRetrievalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRetrievalDateChanged();
    #endregion
		
		public CollarDeployment()
		{
			this._Animal = default(EntityRef<Animal>);
			this._Collar = default(EntityRef<Collar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AnimalId
		{
			get
			{
				return this._AnimalId;
			}
			set
			{
				if ((this._AnimalId != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnimalIdChanging(value);
					this.SendPropertyChanging();
					this._AnimalId = value;
					this.SendPropertyChanged("AnimalId");
					this.OnAnimalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarManufacturer", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CollarManufacturer
		{
			get
			{
				return this._CollarManufacturer;
			}
			set
			{
				if ((this._CollarManufacturer != value))
				{
					if (this._Collar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollarManufacturerChanging(value);
					this.SendPropertyChanging();
					this._CollarManufacturer = value;
					this.SendPropertyChanged("CollarManufacturer");
					this.OnCollarManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CollarId
		{
			get
			{
				return this._CollarId;
			}
			set
			{
				if ((this._CollarId != value))
				{
					if (this._Collar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollarIdChanging(value);
					this.SendPropertyChanging();
					this._CollarId = value;
					this.SendPropertyChanged("CollarId");
					this.OnCollarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeploymentDate", DbType="DateTime2 NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DeploymentDate
		{
			get
			{
				return this._DeploymentDate;
			}
			set
			{
				if ((this._DeploymentDate != value))
				{
					this.OnDeploymentDateChanging(value);
					this.SendPropertyChanging();
					this._DeploymentDate = value;
					this.SendPropertyChanged("DeploymentDate");
					this.OnDeploymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetrievalDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> RetrievalDate
		{
			get
			{
				return this._RetrievalDate;
			}
			set
			{
				if ((this._RetrievalDate != value))
				{
					this.OnRetrievalDateChanging(value);
					this.SendPropertyChanging();
					this._RetrievalDate = value;
					this.SendPropertyChanged("RetrievalDate");
					this.OnRetrievalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_CollarDeployment", Storage="_Animal", ThisKey="ProjectId,AnimalId", OtherKey="ProjectId,AnimalId", IsForeignKey=true)]
		public Animal Animal
		{
			get
			{
				return this._Animal.Entity;
			}
			set
			{
				Animal previousValue = this._Animal.Entity;
				if (((previousValue != value) 
							|| (this._Animal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Animal.Entity = null;
						previousValue.CollarDeployments.Remove(this);
					}
					this._Animal.Entity = value;
					if ((value != null))
					{
						value.CollarDeployments.Add(this);
						this._ProjectId = value.ProjectId;
						this._AnimalId = value.AnimalId;
					}
					else
					{
						this._ProjectId = default(string);
						this._AnimalId = default(string);
					}
					this.SendPropertyChanged("Animal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Collar_CollarDeployment", Storage="_Collar", ThisKey="CollarManufacturer,CollarId", OtherKey="CollarManufacturer,CollarId", IsForeignKey=true)]
		public Collar Collar
		{
			get
			{
				return this._Collar.Entity;
			}
			set
			{
				Collar previousValue = this._Collar.Entity;
				if (((previousValue != value) 
							|| (this._Collar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Collar.Entity = null;
						previousValue.CollarDeployments.Remove(this);
					}
					this._Collar.Entity = value;
					if ((value != null))
					{
						value.CollarDeployments.Add(this);
						this._CollarManufacturer = value.CollarManufacturer;
						this._CollarId = value.CollarId;
					}
					else
					{
						this._CollarManufacturer = default(string);
						this._CollarId = default(string);
					}
					this.SendPropertyChanged("Collar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Collars")]
	public partial class Collar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CollarManufacturer;
		
		private string _CollarId;
		
		private string _CollarModel;
		
		private string _Manager;
		
		private string _Owner;
		
		private string _AlternativeId;
		
		private string _SerialNumber;
		
		private System.Nullable<double> _Frequency;
		
		private string _DownloadInfo;
		
		private string _Notes;
		
		private EntitySet<CollarDeployment> _CollarDeployments;
		
		private EntitySet<CollarFix> _CollarFixes;
		
		private EntityRef<LookupCollarManufacturer> _LookupCollarManufacturer;
		
		private EntityRef<LookupCollarModel> _LookupCollarModel;
		
		private EntityRef<ProjectInvestigator> _ProjectInvestigator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCollarManufacturerChanging(string value);
    partial void OnCollarManufacturerChanged();
    partial void OnCollarIdChanging(string value);
    partial void OnCollarIdChanged();
    partial void OnCollarModelChanging(string value);
    partial void OnCollarModelChanged();
    partial void OnManagerChanging(string value);
    partial void OnManagerChanged();
    partial void OnOwnerChanging(string value);
    partial void OnOwnerChanged();
    partial void OnAlternativeIdChanging(string value);
    partial void OnAlternativeIdChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    partial void OnFrequencyChanging(System.Nullable<double> value);
    partial void OnFrequencyChanged();
    partial void OnDownloadInfoChanging(string value);
    partial void OnDownloadInfoChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Collar()
		{
			this._CollarDeployments = new EntitySet<CollarDeployment>(new Action<CollarDeployment>(this.attach_CollarDeployments), new Action<CollarDeployment>(this.detach_CollarDeployments));
			this._CollarFixes = new EntitySet<CollarFix>(new Action<CollarFix>(this.attach_CollarFixes), new Action<CollarFix>(this.detach_CollarFixes));
			this._LookupCollarManufacturer = default(EntityRef<LookupCollarManufacturer>);
			this._LookupCollarModel = default(EntityRef<LookupCollarModel>);
			this._ProjectInvestigator = default(EntityRef<ProjectInvestigator>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarManufacturer", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CollarManufacturer
		{
			get
			{
				return this._CollarManufacturer;
			}
			set
			{
				if ((this._CollarManufacturer != value))
				{
					if (this._LookupCollarManufacturer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollarManufacturerChanging(value);
					this.SendPropertyChanging();
					this._CollarManufacturer = value;
					this.SendPropertyChanged("CollarManufacturer");
					this.OnCollarManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CollarId
		{
			get
			{
				return this._CollarId;
			}
			set
			{
				if ((this._CollarId != value))
				{
					this.OnCollarIdChanging(value);
					this.SendPropertyChanging();
					this._CollarId = value;
					this.SendPropertyChanged("CollarId");
					this.OnCollarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarModel", DbType="VarChar(24) NOT NULL", CanBeNull=false)]
		public string CollarModel
		{
			get
			{
				return this._CollarModel;
			}
			set
			{
				if ((this._CollarModel != value))
				{
					if (this._LookupCollarModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollarModelChanging(value);
					this.SendPropertyChanging();
					this._CollarModel = value;
					this.SendPropertyChanged("CollarModel");
					this.OnCollarModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					if (this._ProjectInvestigator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagerChanging(value);
					this.SendPropertyChanging();
					this._Manager = value;
					this.SendPropertyChanged("Manager");
					this.OnManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="NVarChar(100)")]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeId", DbType="VarChar(16)")]
		public string AlternativeId
		{
			get
			{
				return this._AlternativeId;
			}
			set
			{
				if ((this._AlternativeId != value))
				{
					this.OnAlternativeIdChanging(value);
					this.SendPropertyChanging();
					this._AlternativeId = value;
					this.SendPropertyChanged("AlternativeId");
					this.OnAlternativeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="VarChar(100)")]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Float")]
		public System.Nullable<double> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadInfo", DbType="VarChar(200)")]
		public string DownloadInfo
		{
			get
			{
				return this._DownloadInfo;
			}
			set
			{
				if ((this._DownloadInfo != value))
				{
					this.OnDownloadInfoChanging(value);
					this.SendPropertyChanging();
					this._DownloadInfo = value;
					this.SendPropertyChanged("DownloadInfo");
					this.OnDownloadInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Collar_CollarDeployment", Storage="_CollarDeployments", ThisKey="CollarManufacturer,CollarId", OtherKey="CollarManufacturer,CollarId")]
		public EntitySet<CollarDeployment> CollarDeployments
		{
			get
			{
				return this._CollarDeployments;
			}
			set
			{
				this._CollarDeployments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Collar_CollarFix", Storage="_CollarFixes", ThisKey="CollarManufacturer,CollarId", OtherKey="CollarManufacturer,CollarId")]
		public EntitySet<CollarFix> CollarFixes
		{
			get
			{
				return this._CollarFixes;
			}
			set
			{
				this._CollarFixes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LookupCollarManufacturer_Collar", Storage="_LookupCollarManufacturer", ThisKey="CollarManufacturer", OtherKey="CollarManufacturer", IsForeignKey=true)]
		public LookupCollarManufacturer LookupCollarManufacturer
		{
			get
			{
				return this._LookupCollarManufacturer.Entity;
			}
			set
			{
				LookupCollarManufacturer previousValue = this._LookupCollarManufacturer.Entity;
				if (((previousValue != value) 
							|| (this._LookupCollarManufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LookupCollarManufacturer.Entity = null;
						previousValue.Collars.Remove(this);
					}
					this._LookupCollarManufacturer.Entity = value;
					if ((value != null))
					{
						value.Collars.Add(this);
						this._CollarManufacturer = value.CollarManufacturer;
					}
					else
					{
						this._CollarManufacturer = default(string);
					}
					this.SendPropertyChanged("LookupCollarManufacturer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LookupCollarModel_Collar", Storage="_LookupCollarModel", ThisKey="CollarModel", OtherKey="CollarModel", IsForeignKey=true)]
		public LookupCollarModel LookupCollarModel
		{
			get
			{
				return this._LookupCollarModel.Entity;
			}
			set
			{
				LookupCollarModel previousValue = this._LookupCollarModel.Entity;
				if (((previousValue != value) 
							|| (this._LookupCollarModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LookupCollarModel.Entity = null;
						previousValue.Collars.Remove(this);
					}
					this._LookupCollarModel.Entity = value;
					if ((value != null))
					{
						value.Collars.Add(this);
						this._CollarModel = value.CollarModel;
					}
					else
					{
						this._CollarModel = default(string);
					}
					this.SendPropertyChanged("LookupCollarModel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectInvestigator_Collar", Storage="_ProjectInvestigator", ThisKey="Manager", OtherKey="Login", IsForeignKey=true)]
		public ProjectInvestigator ProjectInvestigator
		{
			get
			{
				return this._ProjectInvestigator.Entity;
			}
			set
			{
				ProjectInvestigator previousValue = this._ProjectInvestigator.Entity;
				if (((previousValue != value) 
							|| (this._ProjectInvestigator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectInvestigator.Entity = null;
						previousValue.Collars.Remove(this);
					}
					this._ProjectInvestigator.Entity = value;
					if ((value != null))
					{
						value.Collars.Add(this);
						this._Manager = value.Login;
					}
					else
					{
						this._Manager = default(string);
					}
					this.SendPropertyChanged("ProjectInvestigator");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CollarDeployments(CollarDeployment entity)
		{
			this.SendPropertyChanging();
			entity.Collar = this;
		}
		
		private void detach_CollarDeployments(CollarDeployment entity)
		{
			this.SendPropertyChanging();
			entity.Collar = null;
		}
		
		private void attach_CollarFixes(CollarFix entity)
		{
			this.SendPropertyChanging();
			entity.Collar = this;
		}
		
		private void detach_CollarFixes(CollarFix entity)
		{
			this.SendPropertyChanging();
			entity.Collar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LookupCollarFileFormats")]
	public partial class LookupCollarFileFormat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private char _Code;
		
		private string _CollarManufacturer;
		
		private string _Name;
		
		private string _Description;
		
		private string _TableName;
		
		private char _HasCollarIdColumn;
		
		private EntitySet<CollarFile> _CollarFiles;
		
		private EntityRef<LookupCollarManufacturer> _LookupCollarManufacturer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(char value);
    partial void OnCodeChanged();
    partial void OnCollarManufacturerChanging(string value);
    partial void OnCollarManufacturerChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnHasCollarIdColumnChanging(char value);
    partial void OnHasCollarIdColumnChanged();
    #endregion
		
		public LookupCollarFileFormat()
		{
			this._CollarFiles = new EntitySet<CollarFile>(new Action<CollarFile>(this.attach_CollarFiles), new Action<CollarFile>(this.detach_CollarFiles));
			this._LookupCollarManufacturer = default(EntityRef<LookupCollarManufacturer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(1) NOT NULL", IsPrimaryKey=true)]
		public char Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarManufacturer", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string CollarManufacturer
		{
			get
			{
				return this._CollarManufacturer;
			}
			set
			{
				if ((this._CollarManufacturer != value))
				{
					if (this._LookupCollarManufacturer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollarManufacturerChanging(value);
					this.SendPropertyChanging();
					this._CollarManufacturer = value;
					this.SendPropertyChanged("CollarManufacturer");
					this.OnCollarManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasCollarIdColumn", DbType="Char(1) NOT NULL")]
		public char HasCollarIdColumn
		{
			get
			{
				return this._HasCollarIdColumn;
			}
			set
			{
				if ((this._HasCollarIdColumn != value))
				{
					this.OnHasCollarIdColumnChanging(value);
					this.SendPropertyChanging();
					this._HasCollarIdColumn = value;
					this.SendPropertyChanged("HasCollarIdColumn");
					this.OnHasCollarIdColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LookupCollarFileFormat_CollarFile", Storage="_CollarFiles", ThisKey="Code", OtherKey="Format")]
		public EntitySet<CollarFile> CollarFiles
		{
			get
			{
				return this._CollarFiles;
			}
			set
			{
				this._CollarFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LookupCollarManufacturer_LookupCollarFileFormat", Storage="_LookupCollarManufacturer", ThisKey="CollarManufacturer", OtherKey="CollarManufacturer", IsForeignKey=true)]
		public LookupCollarManufacturer LookupCollarManufacturer
		{
			get
			{
				return this._LookupCollarManufacturer.Entity;
			}
			set
			{
				LookupCollarManufacturer previousValue = this._LookupCollarManufacturer.Entity;
				if (((previousValue != value) 
							|| (this._LookupCollarManufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LookupCollarManufacturer.Entity = null;
						previousValue.LookupCollarFileFormats.Remove(this);
					}
					this._LookupCollarManufacturer.Entity = value;
					if ((value != null))
					{
						value.LookupCollarFileFormats.Add(this);
						this._CollarManufacturer = value.CollarManufacturer;
					}
					else
					{
						this._CollarManufacturer = default(string);
					}
					this.SendPropertyChanged("LookupCollarManufacturer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CollarFiles(CollarFile entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarFileFormat = this;
		}
		
		private void detach_CollarFiles(CollarFile entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarFileFormat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LookupCollarFileStatus")]
	public partial class LookupCollarFileStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private char _Code;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<CollarFile> _CollarFiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(char value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public LookupCollarFileStatus()
		{
			this._CollarFiles = new EntitySet<CollarFile>(new Action<CollarFile>(this.attach_CollarFiles), new Action<CollarFile>(this.detach_CollarFiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(1) NOT NULL", IsPrimaryKey=true)]
		public char Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LookupCollarFileStatus_CollarFile", Storage="_CollarFiles", ThisKey="Code", OtherKey="Status")]
		public EntitySet<CollarFile> CollarFiles
		{
			get
			{
				return this._CollarFiles;
			}
			set
			{
				this._CollarFiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CollarFiles(CollarFile entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarFileStatus = this;
		}
		
		private void detach_CollarFiles(CollarFile entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarFileStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LookupCollarManufacturers")]
	public partial class LookupCollarManufacturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CollarManufacturer;
		
		private string _Name;
		
		private string _Website;
		
		private string _Description;
		
		private EntitySet<CollarFile> _CollarFiles;
		
		private EntitySet<Collar> _Collars;
		
		private EntitySet<LookupCollarFileFormat> _LookupCollarFileFormats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCollarManufacturerChanging(string value);
    partial void OnCollarManufacturerChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public LookupCollarManufacturer()
		{
			this._CollarFiles = new EntitySet<CollarFile>(new Action<CollarFile>(this.attach_CollarFiles), new Action<CollarFile>(this.detach_CollarFiles));
			this._Collars = new EntitySet<Collar>(new Action<Collar>(this.attach_Collars), new Action<Collar>(this.detach_Collars));
			this._LookupCollarFileFormats = new EntitySet<LookupCollarFileFormat>(new Action<LookupCollarFileFormat>(this.attach_LookupCollarFileFormats), new Action<LookupCollarFileFormat>(this.detach_LookupCollarFileFormats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarManufacturer", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CollarManufacturer
		{
			get
			{
				return this._CollarManufacturer;
			}
			set
			{
				if ((this._CollarManufacturer != value))
				{
					this.OnCollarManufacturerChanging(value);
					this.SendPropertyChanging();
					this._CollarManufacturer = value;
					this.SendPropertyChanged("CollarManufacturer");
					this.OnCollarManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(200)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LookupCollarManufacturer_CollarFile", Storage="_CollarFiles", ThisKey="CollarManufacturer", OtherKey="CollarManufacturer")]
		public EntitySet<CollarFile> CollarFiles
		{
			get
			{
				return this._CollarFiles;
			}
			set
			{
				this._CollarFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LookupCollarManufacturer_Collar", Storage="_Collars", ThisKey="CollarManufacturer", OtherKey="CollarManufacturer")]
		public EntitySet<Collar> Collars
		{
			get
			{
				return this._Collars;
			}
			set
			{
				this._Collars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LookupCollarManufacturer_LookupCollarFileFormat", Storage="_LookupCollarFileFormats", ThisKey="CollarManufacturer", OtherKey="CollarManufacturer")]
		public EntitySet<LookupCollarFileFormat> LookupCollarFileFormats
		{
			get
			{
				return this._LookupCollarFileFormats;
			}
			set
			{
				this._LookupCollarFileFormats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CollarFiles(CollarFile entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarManufacturer = this;
		}
		
		private void detach_CollarFiles(CollarFile entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarManufacturer = null;
		}
		
		private void attach_Collars(Collar entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarManufacturer = this;
		}
		
		private void detach_Collars(Collar entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarManufacturer = null;
		}
		
		private void attach_LookupCollarFileFormats(LookupCollarFileFormat entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarManufacturer = this;
		}
		
		private void detach_LookupCollarFileFormats(LookupCollarFileFormat entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarManufacturer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LookupCollarModels")]
	public partial class LookupCollarModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CollarModel;
		
		private EntitySet<Collar> _Collars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCollarModelChanging(string value);
    partial void OnCollarModelChanged();
    #endregion
		
		public LookupCollarModel()
		{
			this._Collars = new EntitySet<Collar>(new Action<Collar>(this.attach_Collars), new Action<Collar>(this.detach_Collars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarModel", DbType="VarChar(24) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CollarModel
		{
			get
			{
				return this._CollarModel;
			}
			set
			{
				if ((this._CollarModel != value))
				{
					this.OnCollarModelChanging(value);
					this.SendPropertyChanging();
					this._CollarModel = value;
					this.SendPropertyChanged("CollarModel");
					this.OnCollarModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LookupCollarModel_Collar", Storage="_Collars", ThisKey="CollarModel", OtherKey="CollarModel")]
		public EntitySet<Collar> Collars
		{
			get
			{
				return this._Collars;
			}
			set
			{
				this._Collars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Collars(Collar entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarModel = this;
		}
		
		private void detach_Collars(Collar entity)
		{
			this.SendPropertyChanging();
			entity.LookupCollarModel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LookupGender")]
	public partial class LookupGender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private char _Sex;
		
		private EntitySet<Animal> _Animals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSexChanging(char value);
    partial void OnSexChanged();
    #endregion
		
		public LookupGender()
		{
			this._Animals = new EntitySet<Animal>(new Action<Animal>(this.attach_Animals), new Action<Animal>(this.detach_Animals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Char(1) NOT NULL", IsPrimaryKey=true)]
		public char Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LookupGender_Animal", Storage="_Animals", ThisKey="Sex", OtherKey="Gender")]
		public EntitySet<Animal> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				this._Animals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.LookupGender = this;
		}
		
		private void detach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.LookupGender = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LookupSpecies")]
	public partial class LookupSpecies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Species;
		
		private EntitySet<Animal> _Animals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpeciesChanging(string value);
    partial void OnSpeciesChanged();
    #endregion
		
		public LookupSpecies()
		{
			this._Animals = new EntitySet<Animal>(new Action<Animal>(this.attach_Animals), new Action<Animal>(this.detach_Animals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Species", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Species
		{
			get
			{
				return this._Species;
			}
			set
			{
				if ((this._Species != value))
				{
					this.OnSpeciesChanging(value);
					this.SendPropertyChanging();
					this._Species = value;
					this.SendPropertyChanged("Species");
					this.OnSpeciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LookupSpecies_Animal", Storage="_Animals", ThisKey="Species", OtherKey="Species")]
		public EntitySet<Animal> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				this._Animals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.LookupSpecies = this;
		}
		
		private void detach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.LookupSpecies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectEditors")]
	public partial class ProjectEditor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectId;
		
		private string _Editor;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    #endregion
		
		public ProjectEditor()
		{
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectEditor", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectEditors.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectEditors.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectInvestigators")]
	public partial class ProjectInvestigator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Login;
		
		private string _Name;
		
		private string _Email;
		
		private string _Phone;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<Collar> _Collars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public ProjectInvestigator()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._Collars = new EntitySet<Collar>(new Action<Collar>(this.attach_Collars), new Action<Collar>(this.detach_Collars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectInvestigator_Project", Storage="_Projects", ThisKey="Login", OtherKey="ProjectInvestigator")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectInvestigator_Collar", Storage="_Collars", ThisKey="Login", OtherKey="Manager")]
		public EntitySet<Collar> Collars
		{
			get
			{
				return this._Collars;
			}
			set
			{
				this._Collars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.ProjectInvestigator1 = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.ProjectInvestigator1 = null;
		}
		
		private void attach_Collars(Collar entity)
		{
			this.SendPropertyChanging();
			entity.ProjectInvestigator = this;
		}
		
		private void detach_Collars(Collar entity)
		{
			this.SendPropertyChanging();
			entity.ProjectInvestigator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CollarFixes")]
	public partial class CollarFix : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _FixId;
		
		private System.Nullable<long> _HiddenBy;
		
		private int _FileId;
		
		private int _LineNumber;
		
		private string _CollarManufacturer;
		
		private string _CollarId;
		
		private System.DateTime _FixDate;
		
		private double _Lat;
		
		private double _Lon;
		
		private EntityRef<CollarFile> _CollarFile;
		
		private EntityRef<Collar> _Collar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFixIdChanging(long value);
    partial void OnFixIdChanged();
    partial void OnHiddenByChanging(System.Nullable<long> value);
    partial void OnHiddenByChanged();
    partial void OnFileIdChanging(int value);
    partial void OnFileIdChanged();
    partial void OnLineNumberChanging(int value);
    partial void OnLineNumberChanged();
    partial void OnCollarManufacturerChanging(string value);
    partial void OnCollarManufacturerChanged();
    partial void OnCollarIdChanging(string value);
    partial void OnCollarIdChanged();
    partial void OnFixDateChanging(System.DateTime value);
    partial void OnFixDateChanged();
    partial void OnLatChanging(double value);
    partial void OnLatChanged();
    partial void OnLonChanging(double value);
    partial void OnLonChanged();
    #endregion
		
		public CollarFix()
		{
			this._CollarFile = default(EntityRef<CollarFile>);
			this._Collar = default(EntityRef<Collar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long FixId
		{
			get
			{
				return this._FixId;
			}
			set
			{
				if ((this._FixId != value))
				{
					this.OnFixIdChanging(value);
					this.SendPropertyChanging();
					this._FixId = value;
					this.SendPropertyChanged("FixId");
					this.OnFixIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenBy", DbType="BigInt")]
		public System.Nullable<long> HiddenBy
		{
			get
			{
				return this._HiddenBy;
			}
			set
			{
				if ((this._HiddenBy != value))
				{
					this.OnHiddenByChanging(value);
					this.SendPropertyChanging();
					this._HiddenBy = value;
					this.SendPropertyChanged("HiddenBy");
					this.OnHiddenByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="Int NOT NULL")]
		public int FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					if (this._CollarFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="Int NOT NULL")]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarManufacturer", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string CollarManufacturer
		{
			get
			{
				return this._CollarManufacturer;
			}
			set
			{
				if ((this._CollarManufacturer != value))
				{
					if (this._Collar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollarManufacturerChanging(value);
					this.SendPropertyChanging();
					this._CollarManufacturer = value;
					this.SendPropertyChanged("CollarManufacturer");
					this.OnCollarManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollarId", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string CollarId
		{
			get
			{
				return this._CollarId;
			}
			set
			{
				if ((this._CollarId != value))
				{
					if (this._Collar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollarIdChanging(value);
					this.SendPropertyChanging();
					this._CollarId = value;
					this.SendPropertyChanged("CollarId");
					this.OnCollarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime FixDate
		{
			get
			{
				return this._FixDate;
			}
			set
			{
				if ((this._FixDate != value))
				{
					this.OnFixDateChanging(value);
					this.SendPropertyChanging();
					this._FixDate = value;
					this.SendPropertyChanged("FixDate");
					this.OnFixDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lat", DbType="Float NOT NULL")]
		public double Lat
		{
			get
			{
				return this._Lat;
			}
			set
			{
				if ((this._Lat != value))
				{
					this.OnLatChanging(value);
					this.SendPropertyChanging();
					this._Lat = value;
					this.SendPropertyChanged("Lat");
					this.OnLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lon", DbType="Float NOT NULL")]
		public double Lon
		{
			get
			{
				return this._Lon;
			}
			set
			{
				if ((this._Lon != value))
				{
					this.OnLonChanging(value);
					this.SendPropertyChanging();
					this._Lon = value;
					this.SendPropertyChanged("Lon");
					this.OnLonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CollarFile_CollarFix", Storage="_CollarFile", ThisKey="FileId", OtherKey="FileId", IsForeignKey=true)]
		public CollarFile CollarFile
		{
			get
			{
				return this._CollarFile.Entity;
			}
			set
			{
				CollarFile previousValue = this._CollarFile.Entity;
				if (((previousValue != value) 
							|| (this._CollarFile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CollarFile.Entity = null;
						previousValue.CollarFixes.Remove(this);
					}
					this._CollarFile.Entity = value;
					if ((value != null))
					{
						value.CollarFixes.Add(this);
						this._FileId = value.FileId;
					}
					else
					{
						this._FileId = default(int);
					}
					this.SendPropertyChanged("CollarFile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Collar_CollarFix", Storage="_Collar", ThisKey="CollarManufacturer,CollarId", OtherKey="CollarManufacturer,CollarId", IsForeignKey=true)]
		public Collar Collar
		{
			get
			{
				return this._Collar.Entity;
			}
			set
			{
				Collar previousValue = this._Collar.Entity;
				if (((previousValue != value) 
							|| (this._Collar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Collar.Entity = null;
						previousValue.CollarFixes.Remove(this);
					}
					this._Collar.Entity = value;
					if ((value != null))
					{
						value.CollarFixes.Add(this);
						this._CollarManufacturer = value.CollarManufacturer;
						this._CollarId = value.CollarId;
					}
					else
					{
						this._CollarManufacturer = default(string);
						this._CollarId = default(string);
					}
					this.SendPropertyChanged("Collar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
